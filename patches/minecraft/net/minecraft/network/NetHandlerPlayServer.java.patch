--- before/net/minecraft/network/NetHandlerPlayServer.java
+++ after/net/minecraft/network/NetHandlerPlayServer.java
@@ -3,13 +3,16 @@
 import com.google.common.collect.Lists;
 import com.google.common.primitives.Doubles;
 import com.google.common.primitives.Floats;
-import com.google.common.util.concurrent.Futures;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
 import java.io.IOException;
 import java.util.Collections;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
+
 import net.minecraft.advancements.Advancement;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.block.BlockCommandBlock;
@@ -19,6 +22,7 @@
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.crash.ICrashReportDetail;
 import net.minecraft.entity.Entity;
+import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.IJumpingMount;
 import net.minecraft.entity.MoverType;
 import net.minecraft.entity.item.EntityBoat;
@@ -40,6 +44,7 @@
 import net.minecraft.inventory.EntityEquipmentSlot;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.inventory.Slot;
+import net.minecraft.item.Item;
 import net.minecraft.item.ItemElytra;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemWritableBook;
@@ -82,12 +87,14 @@
 import net.minecraft.network.play.server.SPacketChat;
 import net.minecraft.network.play.server.SPacketConfirmTransaction;
 import net.minecraft.network.play.server.SPacketDisconnect;
+import net.minecraft.network.play.server.SPacketEntityAttach;
+import net.minecraft.network.play.server.SPacketEntityMetadata;
 import net.minecraft.network.play.server.SPacketHeldItemChange;
 import net.minecraft.network.play.server.SPacketKeepAlive;
 import net.minecraft.network.play.server.SPacketMoveVehicle;
 import net.minecraft.network.play.server.SPacketPlayerPosLook;
-import net.minecraft.network.play.server.SPacketRespawn;
 import net.minecraft.network.play.server.SPacketSetSlot;
+import net.minecraft.network.play.server.SPacketSpawnPosition;
 import net.minecraft.network.play.server.SPacketTabComplete;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.tileentity.CommandBlockBaseLogic;
@@ -108,6 +115,7 @@
 import net.minecraft.util.ServerRecipeBookHelper;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.util.text.ChatType;
 import net.minecraft.util.text.ITextComponent;
@@ -117,9 +125,48 @@
 import net.minecraft.world.DimensionType;
 import net.minecraft.world.GameType;
 import net.minecraft.world.WorldServer;
+import net.minecraftforge.fml.common.network.handshake.NetworkDispatcher;
+import net.minecraftforge.fml.relauncher.FMLLaunchHandler;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_12_R1.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_12_R1.util.CraftChatMessage;
+import org.bukkit.craftbukkit.v1_12_R1.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.v1_12_R1.util.Waitable;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.SignChangeEvent;
+import org.bukkit.event.inventory.ClickType;
+import org.bukkit.event.inventory.CraftItemEvent;
+import org.bukkit.event.inventory.InventoryAction;
+import org.bukkit.event.inventory.InventoryClickEvent;
+import org.bukkit.event.inventory.InventoryCreativeEvent;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerAnimationEvent;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+import org.bukkit.event.player.PlayerInteractAtEntityEvent;
+import org.bukkit.event.player.PlayerInteractEntityEvent;
+import org.bukkit.event.player.PlayerItemHeldEvent;
+import org.bukkit.event.player.PlayerKickEvent;
+import org.bukkit.event.player.PlayerMoveEvent;
+import org.bukkit.event.player.PlayerResourcePackStatusEvent;
+import org.bukkit.event.player.PlayerSwapHandItemsEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.player.PlayerToggleFlightEvent;
+import org.bukkit.event.player.PlayerToggleSneakEvent;
+import org.bukkit.event.player.PlayerToggleSprintEvent;
+import org.bukkit.inventory.CraftingInventory;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.InventoryView;
+import org.bukkit.util.NumberConversions;
 
 public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable
 {
@@ -128,12 +175,16 @@
     private final MinecraftServer field_147367_d;
     public EntityPlayerMP field_147369_b;
     private int field_147368_e;
-    private long field_194402_f;
+    private long field_194402_f = func_147363_d(); // CatServer
     private boolean field_194403_g;
     private long field_194404_h;
-    private int field_147374_l;
+    // private int chatSpamThresholdCount;
+    // CraftBukkit start - multithreaded fields
+    private volatile int field_147374_l;
+    private static final AtomicIntegerFieldUpdater chatSpamField = AtomicIntegerFieldUpdater.newUpdater(NetHandlerPlayServer.class, FMLLaunchHandler.isDeobfuscatedEnvironment() ? "chatSpamThresholdCount" : new String(new char[]{'f', 'i', 'e', 'l', 'd', '_', '1', '4', '7', '3', '7', '4', '_', 'l'}));
+    // CraftBukkit end
     private int field_147375_m;
-    private final IntHashMap<Short> field_147372_n = new IntHashMap<>();
+    private final IntHashMap<Short> field_147372_n = new IntHashMap<Short>();
     private double field_184349_l;
     private double field_184350_m;
     private double field_184351_n;
@@ -158,22 +209,69 @@
     private int field_184348_G;
     private ServerRecipeBookHelper field_194309_H = new ServerRecipeBookHelper();
 
+    private final org.bukkit.craftbukkit.v1_12_R1.CraftServer craftServer;
+    private boolean processedDisconnect;
+    private int lastTick = MinecraftServer.currentTick;
+    private int allowedPlayerTicks = 1;
+    private int lastDropTick = MinecraftServer.currentTick;
+    private int lastBookTick  = MinecraftServer.currentTick;
+    private int dropCount = 0;
+    private static final int SURVIVAL_PLACE_DISTANCE_SQUARED = 6 * 6;
+    private static final int CREATIVE_PLACE_DISTANCE_SQUARED = 7 * 7;
+
+    // Get position of last block hit for BlockDamageLevel.STOPPED
+    private double lastPosX = Double.MAX_VALUE;
+    private double lastPosY = Double.MAX_VALUE;
+    private double lastPosZ = Double.MAX_VALUE;
+    private float lastPitch = Float.MAX_VALUE;
+    private float lastYaw = Float.MAX_VALUE;
+    private boolean justTeleported = false;
+    private final static HashSet<Integer> invalidItems = new HashSet<Integer>(java.util.Arrays.asList(8, 9, 10, 11, 26, 34, 36, 43, 51, 55, 59, 62, 63, 64, 68, 71, 74, 75, 83, 90, 92, 93, 94, 104, 105, 115, 117, 118, 119, 125, 127, 132, 140, 141, 142, 144)); // TODO: Check after every update.
+
+    // CatServer start - Packet limit
+    private int craftRequestThrottle = 0;
+    private int releasedUseItemThrottle = 0;
+    private int fastClickGUIWarnThrottle = 0;
+    private boolean alreadyClickGUIThisTick = false;
+    private int readItemBookThrottle = 0;
+    // CatServer end
+
+    // CatRoom start
+    @javax.annotation.Nullable private final NetworkDispatcher dispatcher;
+
     public NetHandlerPlayServer(MinecraftServer p_i1530_1_, NetworkManager p_i1530_2_, EntityPlayerMP p_i1530_3_)
     {
-        this.field_147367_d = p_i1530_1_;
-        this.field_147371_a = p_i1530_2_;
-        p_i1530_2_.func_150719_a(this);
-        this.field_147369_b = p_i1530_3_;
-        p_i1530_3_.field_71135_a = this;
-    }
-
-    @Override
+        this(p_i1530_1_, p_i1530_2_, p_i1530_3_, null);
+    }
+    public NetHandlerPlayServer(MinecraftServer craftServer, NetworkManager networkManagerIn, EntityPlayerMP playerIn, @javax.annotation.Nullable NetworkDispatcher dispatcher)
+    {
+        this.field_147367_d = craftServer;
+        this.field_147371_a = networkManagerIn;
+        this.dispatcher = dispatcher;
+        networkManagerIn.func_150719_a(this);
+        this.field_147369_b = playerIn;
+        playerIn.field_71135_a = this;
+        this.craftServer = field_147367_d == null ? (org.bukkit.craftbukkit.v1_12_R1.CraftServer)org.bukkit.Bukkit.getServer() : field_147367_d.server;
+    }
+    // CatRoom End
+
+    public CraftPlayer getPlayer() {
+        return (this.field_147369_b == null) ? null : (CraftPlayer) this.field_147369_b.getBukkitEntity();
+    }
+
     public void func_73660_a()
     {
+        // CatRoom start
+        // FORGE: sometimes the netqueue will tick while login is occurring, causing an NPE. We shouldn't tick until the connection is complete
+        if (dispatcher != null && dispatcher.state == NetworkDispatcher.ConnectionState.FINALIZING)
+        {
+            dispatcher.completeServerSideConnection(NetworkDispatcher.ConnectionType.MODDED);
+        }
+        if (this.field_147369_b.field_71135_a != this) return;
+        // CatRoom End
         this.func_184342_d();
         this.field_147369_b.func_71127_g();
-        this.field_147369_b
-        .func_70080_a(this.field_184349_l, this.field_184350_m, this.field_184351_n, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
+        this.field_147369_b.func_70080_a(this.field_184349_l, this.field_184350_m, this.field_184351_n, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
         ++this.field_147368_e;
         this.field_184348_G = this.field_184347_F;
 
@@ -181,8 +279,8 @@
         {
             if (++this.field_147365_f > 80)
             {
-                field_147370_c.warn("{} was kicked for floating too long!", this.field_147369_b.func_70005_c_());
-                this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.flying"));
+                field_147370_c.warn("{} was kicked for floating too long!", (Object)this.field_147369_b.func_70005_c_());
+                this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.flying", new Object[0]));
                 return;
             }
         }
@@ -207,8 +305,8 @@
             {
                 if (++this.field_184346_E > 80)
                 {
-                    field_147370_c.warn("{} was kicked for floating a vehicle too long!", this.field_147369_b.func_70005_c_());
-                    this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.flying"));
+                    field_147370_c.warn("{} was kicked for floating a vehicle too long!", (Object)this.field_147369_b.func_70005_c_());
+                    this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.flying", new Object[0]));
                     return;
                 }
             }
@@ -228,42 +326,57 @@
         this.field_147367_d.field_71304_b.func_76320_a("keepAlive");
         long i = this.func_147363_d();
 
-        if (i - this.field_194402_f >= 15000L)
+        if (i - this.field_194402_f >= 25000L) // CraftBukkit
         {
             if (this.field_194403_g)
             {
-                this.func_194028_b(new TextComponentTranslation("disconnect.timeout"));
+                this.func_194028_b(new TextComponentTranslation("disconnect.timeout", new Object[0]));
             }
             else
             {
-                this.field_194403_g = true;
-                this.field_194402_f = i;
-                this.field_194404_h = i;
-                this.func_147359_a(new SPacketKeepAlive(this.field_194404_h));
+                // CatServer start - Give clients a longer time to respond to pings as per pre 1.12.2 timings, this should effectively place the keepalive handling back to "as it was" before 1.12.2
+                long currentTime = this.func_147363_d();
+                if (currentTime - field_194402_f >= 15000L) { // 15 seconds
+                    this.field_194403_g = true;
+                    this.field_194402_f = currentTime;
+                    this.field_194404_h = i;
+                    this.func_147359_a(new SPacketKeepAlive(this.field_194404_h));
+                }
+                // CatServer end
             }
         }
 
         this.field_147367_d.field_71304_b.func_76319_b();
-
-        if (this.field_147374_l > 0)
+        // CraftBukkit start
+        for (int spam; (spam = this.field_147374_l) > 0 && !chatSpamField.compareAndSet(this, spam, spam - 1); ) ;
+        /* Use thread-safe field access instead
+        if (this.chatThrottle > 0)
         {
-            --this.field_147374_l;
+            --this.chatThrottle;
         }
+        // CraftBukkit end */
+
+        // CatServer start
+        if (this.craftRequestThrottle > 0) --this.craftRequestThrottle;
+        if (this.releasedUseItemThrottle > 0) --this.releasedUseItemThrottle;
+        if (this.fastClickGUIWarnThrottle > 0) --this.fastClickGUIWarnThrottle;
+        if (this.readItemBookThrottle > 0) --this.readItemBookThrottle;
+        this.alreadyClickGUIThisTick = false;
+        // CatServer end
 
         if (this.field_147375_m > 0)
         {
             --this.field_147375_m;
         }
 
-        if (this.field_147369_b.func_154331_x() > 0L
-                && this.field_147367_d.func_143007_ar() > 0
-                && MinecraftServer.func_130071_aq() - this.field_147369_b.func_154331_x() > (long)(this.field_147367_d.func_143007_ar() * 1000 * 60))
+        if (this.field_147369_b.func_154331_x() > 0L && this.field_147367_d.func_143007_ar() > 0 && MinecraftServer.func_130071_aq() - this.field_147369_b.func_154331_x() > (long)(this.field_147367_d.func_143007_ar() * 1000 * 60))
         {
-            this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.idling"));
+            this.field_147369_b.func_143004_u(); // CraftBukkit - SPIGOT-854
+            this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.idling", new Object[0]));
         }
     }
 
-    private void func_184342_d()
+    public void func_184342_d()
     {
         this.field_184349_l = this.field_147369_b.field_70165_t;
         this.field_184350_m = this.field_147369_b.field_70163_u;
@@ -278,28 +391,50 @@
         return this.field_147371_a;
     }
 
-    public void func_194028_b(final ITextComponent p_194028_1_)
-    {
-        this.field_147371_a.func_179288_a(new SPacketDisconnect(p_194028_1_), new GenericFutureListener < Future <? super Void >> ()
-        {
-            @Override
-            public void operationComplete(Future <? super Void > p_operationComplete_1_) throws Exception
-            {
-                NetHandlerPlayServer.this.field_147371_a.func_150718_a(p_194028_1_);
+    @Deprecated
+    public void func_194028_b(ITextComponent p_194028_1_) {
+        disconnect(CraftChatMessage.fromComponent(p_194028_1_, TextFormatting.WHITE));
+    }
+
+    public void disconnect(String s) {
+        // CraftBukkit start - fire PlayerKickEvent
+        if (this.processedDisconnect) {
+            return;
+        }
+        String leaveMessage = TextFormatting.YELLOW + this.field_147369_b.func_70005_c_() + " left the game.";
+
+        PlayerKickEvent event = new PlayerKickEvent(this.craftServer.getPlayer(this.field_147369_b), s, leaveMessage);
+
+        if (this.craftServer.getServer().func_71278_l()) {
+            this.craftServer.getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled()) {
+            // Do not kick the player
+            return;
+        }
+        // Send the possibly modified leave message
+        s = event.getReason();
+        // CraftBukkit end
+        final ITextComponent chatcomponenttext = new TextComponentTranslation(s);
+
+        this.field_147371_a.func_179288_a(new SPacketDisconnect(chatcomponenttext), new GenericFutureListener() {
+            public void operationComplete(Future future) throws Exception { // CraftBukkit - decompile error
+                NetHandlerPlayServer.this.field_147371_a.func_150718_a(chatcomponenttext);
             }
         });
+        this.func_147231_a(chatcomponenttext); // CraftBukkit - fire quit instantly
         this.field_147371_a.func_150721_g();
-        Futures.getUnchecked(this.field_147367_d.func_152344_a(new Runnable()
+        // CraftBukkit - Don't wait
+        this.field_147367_d.func_152344_a(new Runnable()
         {
-            @Override
             public void run()
             {
                 NetHandlerPlayServer.this.field_147371_a.func_179293_l();
             }
-        }));
+        });
     }
 
-    @Override
     public void func_147358_a(CPacketInput p_147358_1_)
     {
         PacketThreadUtil.func_180031_a(p_147358_1_, this, this.field_147369_b.func_71121_q());
@@ -308,15 +443,9 @@
 
     private static boolean func_183006_b(CPacketPlayer p_183006_0_)
     {
-        if (Doubles.isFinite(p_183006_0_.func_186997_a(0.0))
-                && Doubles.isFinite(p_183006_0_.func_186996_b(0.0))
-                && Doubles.isFinite(p_183006_0_.func_187000_c(0.0))
-                && Floats.isFinite(p_183006_0_.func_186998_b(0.0F))
-                && Floats.isFinite(p_183006_0_.func_186999_a(0.0F)))
+        if (Doubles.isFinite(p_183006_0_.func_186997_a(0.0D)) && Doubles.isFinite(p_183006_0_.func_186996_b(0.0D)) && Doubles.isFinite(p_183006_0_.func_187000_c(0.0D)) && Floats.isFinite(p_183006_0_.func_186998_b(0.0F)) && Floats.isFinite(p_183006_0_.func_186999_a(0.0F)))
         {
-            return Math.abs(p_183006_0_.func_186997_a(0.0)) > 3.0E7
-                   || Math.abs(p_183006_0_.func_186996_b(0.0)) > 3.0E7
-                   || Math.abs(p_183006_0_.func_187000_c(0.0)) > 3.0E7;
+            return Math.abs(p_183006_0_.func_186997_a(0.0D)) > 3.0E7D || Math.abs(p_183006_0_.func_186996_b(0.0D)) > 3.0E7D || Math.abs(p_183006_0_.func_187000_c(0.0D)) > 3.0E7D;
         }
         else
         {
@@ -326,21 +455,16 @@
 
     private static boolean func_184341_b(CPacketVehicleMove p_184341_0_)
     {
-        return !Doubles.isFinite(p_184341_0_.func_187004_a())
-               || !Doubles.isFinite(p_184341_0_.func_187002_b())
-               || !Doubles.isFinite(p_184341_0_.func_187003_c())
-               || !Floats.isFinite(p_184341_0_.func_187005_e())
-               || !Floats.isFinite(p_184341_0_.func_187006_d());
+        return !Doubles.isFinite(p_184341_0_.func_187004_a()) || !Doubles.isFinite(p_184341_0_.func_187002_b()) || !Doubles.isFinite(p_184341_0_.func_187003_c()) || !Floats.isFinite(p_184341_0_.func_187005_e()) || !Floats.isFinite(p_184341_0_.func_187006_d());
     }
 
-    @Override
     public void func_184338_a(CPacketVehicleMove p_184338_1_)
     {
         PacketThreadUtil.func_180031_a(p_184338_1_, this, this.field_147369_b.func_71121_q());
 
         if (func_184341_b(p_184338_1_))
         {
-            this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.invalid_vehicle_movement"));
+            this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.invalid_vehicle_movement", new Object[0]));
         }
         else
         {
@@ -363,52 +487,134 @@
                 double d9 = entity.field_70159_w * entity.field_70159_w + entity.field_70181_x * entity.field_70181_x + entity.field_70179_y * entity.field_70179_y;
                 double d10 = d6 * d6 + d7 * d7 + d8 * d8;
 
-                if (d10 - d9 > 100.0 && (!this.field_147367_d.func_71264_H() || !this.field_147367_d.func_71214_G().equals(entity.func_70005_c_())))
-                {
-                    field_147370_c.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.func_70005_c_(), this.field_147369_b.func_70005_c_(), d6, d7, d8);
+                //if (d10 - d9 > 100.0D && (!this.serverController.isSinglePlayer() || !this.serverController.getServerOwner().equals(entity.getName()))){
+                // CraftBukkit start - handle custom speeds and skipped ticks
+                this.allowedPlayerTicks += (System.currentTimeMillis() / 50) - this.lastTick;
+                this.allowedPlayerTicks = Math.max(this.allowedPlayerTicks, 1);
+                this.lastTick = (int) (System.currentTimeMillis() / 50);
+
+                ++this.field_184347_F;
+                int i = this.field_184347_F - this.field_184348_G;
+                if (i > Math.max(this.allowedPlayerTicks, 5)) {
+                    NetHandlerPlayServer.field_147370_c.debug(this.field_147369_b.func_70005_c_() + " is sending move packets too frequently (" + i + " packets since last tick)");
+                    i = 1;
+                }
+
+                if (d10 > 0) {
+                    allowedPlayerTicks -= 1;
+                } else {
+                    allowedPlayerTicks = 20;
+                }
+                float speed;
+                if (field_147369_b.field_71075_bZ.field_75100_b) {
+                    speed = field_147369_b.field_71075_bZ.field_75096_f * 20f;
+                } else {
+                    speed = field_147369_b.field_71075_bZ.field_75097_g * 10f;
+                }
+                speed *= 2f; // TODO: Get the speed of the vehicle instead of the player
+
+                if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.field_147367_d.func_71264_H() || !this.field_147367_d.func_71214_G().equals(entity.func_70005_c_()))) { // Spigot
+                    // CraftBukkit end
+                    field_147370_c.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.func_70005_c_(), this.field_147369_b.func_70005_c_(), Double.valueOf(d6), Double.valueOf(d7), Double.valueOf(d8));
                     this.field_147371_a.func_179290_a(new SPacketMoveVehicle(entity));
                     return;
                 }
 
-                boolean flag = worldserver.func_184144_a(entity, entity.func_174813_aQ().func_186664_h(0.0625)).isEmpty();
+                boolean flag = worldserver.func_184144_a(entity, entity.func_174813_aQ().func_186664_h(0.0625D)).isEmpty();
                 d6 = d3 - this.field_184359_v;
-                d7 = d4 - this.field_184360_w - 1.0E-6;
+                d7 = d4 - this.field_184360_w - 1.0E-6D;
                 d8 = d5 - this.field_184361_x;
                 entity.func_70091_d(MoverType.PLAYER, d6, d7, d8);
+                double d11 = d7;
                 d6 = d3 - entity.field_70165_t;
                 d7 = d4 - entity.field_70163_u;
 
-                if (d7 > -0.5 || d7 < 0.5)
+                if (d7 > -0.5D || d7 < 0.5D)
                 {
-                    d7 = 0.0;
+                    d7 = 0.0D;
                 }
 
                 d8 = d5 - entity.field_70161_v;
                 d10 = d6 * d6 + d7 * d7 + d8 * d8;
                 boolean flag1 = false;
 
-                if (d10 > 0.0625)
+                if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) // Spigot
                 {
                     flag1 = true;
-                    field_147370_c.warn("{} moved wrongly!", entity.func_70005_c_());
+                    field_147370_c.warn("{} moved wrongly!", (Object)entity.func_70005_c_());
                 }
 
                 entity.func_70080_a(d3, d4, d5, f, f1);
-                boolean flag2 = worldserver.func_184144_a(entity, entity.func_174813_aQ().func_186664_h(0.0625)).isEmpty();
+                this.field_147369_b.func_70080_a(d3, d4, d5, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A); // Forge - Resync player position on vehicle moving
+                boolean flag2 = worldserver.func_184144_a(entity, entity.func_174813_aQ().func_186664_h(0.0625D)).isEmpty();
 
                 if (flag && (flag1 || !flag2))
                 {
                     entity.func_70080_a(d0, d1, d2, f, f1);
+                    this.field_147369_b.func_70080_a(d0, d1, d2, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A); // Forge - Resync player position on vehicle moving
                     this.field_147371_a.func_179290_a(new SPacketMoveVehicle(entity));
                     return;
                 }
+
+                // CraftBukkit start - fire PlayerMoveEvent
+                Player player = this.getPlayer();
+                Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
+                Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+                // If the packet contains movement information then we update the To location with the correct XYZ.
+                to.setX(p_184338_1_.func_187004_a());
+                to.setY(p_184338_1_.func_187002_b());
+                to.setZ(p_184338_1_.func_187003_c());
+
+
+                // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+                to.setYaw(p_184338_1_.func_187006_d());
+                to.setPitch(p_184338_1_.func_187005_e());
+
+                // Prevent 40 event-calls for less than a single pixel of movement >.>
+                double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+                float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+                if ((delta > 1f / 256 || deltaAngle > 10f) && !this.field_147369_b.func_70610_aX()) {
+                    this.lastPosX = to.getX();
+                    this.lastPosY = to.getY();
+                    this.lastPosZ = to.getZ();
+                    this.lastYaw = to.getYaw();
+                    this.lastPitch = to.getPitch();
+
+                    // Skip the first time we do this
+                    if (from.getX() != Double.MAX_VALUE) {
+                        Location oldTo = to.clone();
+                        PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                        this.craftServer.getPluginManager().callEvent(event);
+
+                        // If the event is cancelled we move the player back to their old location.
+                        if (event.isCancelled()) {
+                            teleport(from);
+                            return;
+                        }
+
+                        // If a Plugin has changed the To destination then we teleport the Player
+                        // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                        // We only do this if the Event was not cancelled.
+                        if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                            this.field_147369_b.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.PLUGIN);
+                            return;
+                        }
+
+                        // Check to see if the Players Location has some how changed during the call of the event.
+                        // This can happen due to a plugin teleporting the player instead of using .setTo()
+                        if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported) {
+                            this.justTeleported = false;
+                            return;
+                        }
+                    }
+                }
+                // CraftBukkit end
 
                 this.field_147367_d.func_184103_al().func_72358_d(this.field_147369_b);
-                this.field_147369_b
-                .func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
-                this.field_184345_D = d7 >= -0.03125
-                                      && !this.field_147367_d.func_71231_X()
-                                      && !worldserver.func_72829_c(entity.func_174813_aQ().func_186662_g(0.0625).func_72321_a(0.0, -0.55, 0.0));
+                this.field_147369_b.func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
+                this.field_184345_D = d11 >= -0.03125D && !this.field_147367_d.func_71231_X() && !worldserver.func_72829_c(entity.func_174813_aQ().func_186662_g(0.0625D).func_72321_a(0.0D, -0.55D, 0.0D));
                 this.field_184359_v = entity.field_70165_t;
                 this.field_184360_w = entity.field_70163_u;
                 this.field_184361_x = entity.field_70161_v;
@@ -416,21 +622,13 @@
         }
     }
 
-    @Override
     public void func_184339_a(CPacketConfirmTeleport p_184339_1_)
     {
         PacketThreadUtil.func_180031_a(p_184339_1_, this, this.field_147369_b.func_71121_q());
 
-        if (p_184339_1_.func_186987_a() == this.field_184363_z)
+        if (p_184339_1_.func_186987_a() == this.field_184363_z && this.field_184362_y != null)
         {
-            this.field_147369_b
-            .func_70080_a(
-                this.field_184362_y.field_72450_a,
-                this.field_184362_y.field_72448_b,
-                this.field_184362_y.field_72449_c,
-                this.field_147369_b.field_70177_z,
-                this.field_147369_b.field_70125_A
-            );
+            this.field_147369_b.func_70080_a(this.field_184362_y.field_72450_a, this.field_184362_y.field_72448_b, this.field_184362_y.field_72449_c, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
 
             if (this.field_147369_b.func_184850_K())
             {
@@ -444,7 +642,6 @@
         }
     }
 
-    @Override
     public void func_191984_a(CPacketRecipeInfo p_191984_1_)
     {
         PacketThreadUtil.func_180031_a(p_191984_1_, this, this.field_147369_b.func_71121_q());
@@ -460,7 +657,6 @@
         }
     }
 
-    @Override
     public void func_194027_a(CPacketSeenAdvancements p_194027_1_)
     {
         PacketThreadUtil.func_180031_a(p_194027_1_, this, this.field_147369_b.func_71121_q());
@@ -477,20 +673,19 @@
         }
     }
 
-    @Override
     public void func_147347_a(CPacketPlayer p_147347_1_)
     {
         PacketThreadUtil.func_180031_a(p_147347_1_, this, this.field_147369_b.func_71121_q());
 
         if (func_183006_b(p_147347_1_))
         {
-            this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.invalid_player_movement"));
+            this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.invalid_player_movement", new Object[0]));
         }
         else
         {
             WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
 
-            if (!this.field_147369_b.field_71136_j)
+            if (!this.field_147369_b.field_71136_j && !this.field_147369_b.func_70610_aX())
             {
                 if (this.field_147368_e == 0)
                 {
@@ -502,14 +697,9 @@
                     if (this.field_147368_e - this.field_184343_A > 20)
                     {
                         this.field_184343_A = this.field_147368_e;
-                        this.func_147364_a(
-                            this.field_184362_y.field_72450_a,
-                            this.field_184362_y.field_72448_b,
-                            this.field_184362_y.field_72449_c,
-                            this.field_147369_b.field_70177_z,
-                            this.field_147369_b.field_70125_A
-                        );
+                        this.func_147364_a(this.field_184362_y.field_72450_a, this.field_184362_y.field_72448_b, this.field_184362_y.field_72449_c, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
                     }
+                    this.allowedPlayerTicks = 20;
                 }
                 else
                 {
@@ -517,18 +707,19 @@
 
                     if (this.field_147369_b.func_184218_aH())
                     {
-                        this.field_147369_b
-                        .func_70080_a(
-                            this.field_147369_b.field_70165_t,
-                            this.field_147369_b.field_70163_u,
-                            this.field_147369_b.field_70161_v,
-                            p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z),
-                            p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A)
-                        );
+                        this.field_147369_b.func_70080_a(this.field_147369_b.field_70165_t, this.field_147369_b.field_70163_u, this.field_147369_b.field_70161_v, p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z), p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A));
                         this.field_147367_d.func_184103_al().func_72358_d(this.field_147369_b);
+                        this.allowedPlayerTicks = 20;
                     }
                     else
                     {
+                        // CraftBukkit - Make sure the move is valid but then reset it for plugins to modify
+                        double prevX = field_147369_b.field_70165_t;
+                        double prevY = field_147369_b.field_70163_u;
+                        double prevZ = field_147369_b.field_70161_v;
+                        float prevYaw = field_147369_b.field_70177_z;
+                        float prevPitch = field_147369_b.field_70125_A;
+                        // CraftBukkit end
                         double d0 = this.field_147369_b.field_70165_t;
                         double d1 = this.field_147369_b.field_70163_u;
                         double d2 = this.field_147369_b.field_70161_v;
@@ -541,22 +732,14 @@
                         double d7 = d4 - this.field_184349_l;
                         double d8 = d5 - this.field_184350_m;
                         double d9 = d6 - this.field_184351_n;
-                        double d10 = this.field_147369_b.field_70159_w * this.field_147369_b.field_70159_w
-                                     + this.field_147369_b.field_70181_x * this.field_147369_b.field_70181_x
-                                     + this.field_147369_b.field_70179_y * this.field_147369_b.field_70179_y;
+                        double d10 = this.field_147369_b.field_70159_w * this.field_147369_b.field_70159_w + this.field_147369_b.field_70181_x * this.field_147369_b.field_70181_x + this.field_147369_b.field_70179_y * this.field_147369_b.field_70179_y;
                         double d11 = d7 * d7 + d8 * d8 + d9 * d9;
 
                         if (this.field_147369_b.func_70608_bn())
                         {
-                            if (d11 > 1.0)
+                            if (d11 > 1.0D)
                             {
-                                this.func_147364_a(
-                                    this.field_147369_b.field_70165_t,
-                                    this.field_147369_b.field_70163_u,
-                                    this.field_147369_b.field_70161_v,
-                                    p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z),
-                                    p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A)
-                                );
+                                this.func_147364_a(this.field_147369_b.field_70165_t, this.field_147369_b.field_70163_u, this.field_147369_b.field_70161_v, p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z), p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A));
                             }
                         }
                         else
@@ -564,76 +747,77 @@
                             ++this.field_184347_F;
                             int i = this.field_184347_F - this.field_184348_G;
 
-                            if (i > 5)
-                            {
-                                field_147370_c.debug("{} is sending move packets too frequently ({} packets since last tick)", this.field_147369_b.func_70005_c_(), i);
+                            // CraftBukkit start - handle custom speeds and skipped ticks
+                            this.allowedPlayerTicks += (System.currentTimeMillis() / 50) - this.lastTick;
+                            this.allowedPlayerTicks = Math.max(this.allowedPlayerTicks, 1);
+                            this.lastTick = (int) (System.currentTimeMillis() / 50);
+
+                            if (i > Math.max(this.allowedPlayerTicks, 5)) {
+                                field_147370_c.debug("{} is sending move packets too frequently ({} packets since last tick)", this.field_147369_b.func_70005_c_(), Integer.valueOf(i));
                                 i = 1;
                             }
 
-                            if (!this.field_147369_b.func_184850_K()
-                                    && (
-                                        !this.field_147369_b.func_71121_q().func_82736_K().func_82766_b("disableElytraMovementCheck")
-                                        || !this.field_147369_b.func_184613_cA()
-                                    ))
+                            if (p_147347_1_.field_149481_i || d11 > 0) {
+                                allowedPlayerTicks -= 1;
+                            } else {
+                                allowedPlayerTicks = 20;
+                            }
+                            float speed;
+                            if (field_147369_b.field_71075_bZ.field_75100_b) {
+                                speed = field_147369_b.field_71075_bZ.field_75096_f * 20f;
+                            } else {
+                                speed = field_147369_b.field_71075_bZ.field_75097_g * 10f;
+                            }
+
+                            if (!this.field_147369_b.func_184850_K() && (!this.field_147369_b.func_71121_q().func_82736_K().func_82766_b("disableElytraMovementCheck") || !this.field_147369_b.func_184613_cA()))
                             {
                                 float f2 = this.field_147369_b.func_184613_cA() ? 300.0F : 100.0F;
 
-                                if (d11 - d10 > (double)(f2 * (float)i)
-                                        && (!this.field_147367_d.func_71264_H() || !this.field_147367_d.func_71214_G().equals(this.field_147369_b.func_70005_c_())))
+                                if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.field_147367_d.func_71264_H() || !this.field_147367_d.func_71214_G().equals(this.field_147369_b.func_70005_c_()))) // Spigot
                                 {
-                                    field_147370_c.warn("{} moved too quickly! {},{},{}", this.field_147369_b.func_70005_c_(), d7, d8, d9);
-                                    this.func_147364_a(
-                                        this.field_147369_b.field_70165_t,
-                                        this.field_147369_b.field_70163_u,
-                                        this.field_147369_b.field_70161_v,
-                                        this.field_147369_b.field_70177_z,
-                                        this.field_147369_b.field_70125_A
-                                    );
+                                    field_147370_c.warn("{} moved too quickly! {},{},{}", this.field_147369_b.func_70005_c_(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
+                                    this.func_147364_a(this.field_147369_b.field_70165_t, this.field_147369_b.field_70163_u, this.field_147369_b.field_70161_v, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
                                     return;
                                 }
                             }
 
-                            boolean flag2 = worldserver.func_184144_a(this.field_147369_b, this.field_147369_b.func_174813_aQ().func_186664_h(0.0625)).isEmpty();
+                            boolean flag2 = worldserver.func_184144_a(this.field_147369_b, this.field_147369_b.func_174813_aQ().func_186664_h(0.0625D)).isEmpty();
                             d7 = d4 - this.field_184352_o;
                             d8 = d5 - this.field_184353_p;
                             d9 = d6 - this.field_184354_q;
 
-                            if (this.field_147369_b.field_70122_E && !p_147347_1_.func_149465_i() && d8 > 0.0)
+                            if (this.field_147369_b.field_70122_E && !p_147347_1_.func_149465_i() && d8 > 0.0D)
                             {
                                 this.field_147369_b.func_70664_aZ();
                             }
 
                             this.field_147369_b.func_70091_d(MoverType.PLAYER, d7, d8, d9);
                             this.field_147369_b.field_70122_E = p_147347_1_.func_149465_i();
+                            double d12 = d8;
                             d7 = d4 - this.field_147369_b.field_70165_t;
                             d8 = d5 - this.field_147369_b.field_70163_u;
 
-                            if (d8 > -0.5 || d8 < 0.5)
+                            if (d8 > -0.5D || d8 < 0.5D)
                             {
-                                d8 = 0.0;
+                                d8 = 0.0D;
                             }
 
                             d9 = d6 - this.field_147369_b.field_70161_v;
                             d11 = d7 * d7 + d8 * d8 + d9 * d9;
                             boolean flag = false;
 
-                            if (!this.field_147369_b.func_184850_K()
-                                    && d11 > 0.0625
-                                    && !this.field_147369_b.func_70608_bn()
-                                    && !this.field_147369_b.field_71134_c.func_73083_d()
-                                    && this.field_147369_b.field_71134_c.func_73081_b() != GameType.SPECTATOR)
+                            if (!this.field_147369_b.func_184850_K() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.field_147369_b.func_70608_bn() && !this.field_147369_b.field_71134_c.func_73083_d() && this.field_147369_b.field_71134_c.func_73081_b() != GameType.SPECTATOR)  // Spigot
                             {
                                 flag = true;
-                                field_147370_c.warn("{} moved wrongly!", this.field_147369_b.func_70005_c_());
+                                field_147370_c.warn("{} moved wrongly!", (Object)this.field_147369_b.func_70005_c_());
                             }
 
                             this.field_147369_b.func_70080_a(d4, d5, d6, f, f1);
-                            this.field_147369_b
-                            .func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
+                            this.field_147369_b.func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
 
                             if (!this.field_147369_b.field_70145_X && !this.field_147369_b.func_70608_bn())
                             {
-                                boolean flag1 = worldserver.func_184144_a(this.field_147369_b, this.field_147369_b.func_174813_aQ().func_186664_h(0.0625)).isEmpty();
+                                boolean flag1 = worldserver.func_184144_a(this.field_147369_b, this.field_147369_b.func_174813_aQ().func_186664_h(0.0625D)).isEmpty();
 
                                 if (flag2 && (flag || !flag1))
                                 {
@@ -642,11 +826,72 @@
                                 }
                             }
 
-                            this.field_184344_B = d8 >= -0.03125;
+                            // CraftBukkit start - fire PlayerMoveEvent
+                            // Rest to old location first
+                            this.field_147369_b.func_70080_a(prevX, prevY, prevZ, prevYaw, prevPitch);
+
+                            Player player = this.getPlayer();
+                            Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
+                            Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+                            // If the packet contains movement information then we update the To location with the correct XYZ.
+                            if (p_147347_1_.field_149480_h) {
+                                to.setX(p_147347_1_.field_149479_a);
+                                to.setY(p_147347_1_.field_149477_b);
+                                to.setZ(p_147347_1_.field_149478_c);
+                            }
+
+                            // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+                            if (p_147347_1_.field_149481_i) {
+                                to.setYaw(p_147347_1_.field_149476_e);
+                                to.setPitch(p_147347_1_.field_149473_f);
+                            }
+
+                            // Prevent 40 event-calls for less than a single pixel of movement >.>
+                            double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+                            float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+                            if ((delta > 1f / 256 || deltaAngle > 10f) && !this.field_147369_b.func_70610_aX()) {
+                                this.lastPosX = to.getX();
+                                this.lastPosY = to.getY();
+                                this.lastPosZ = to.getZ();
+                                this.lastYaw = to.getYaw();
+                                this.lastPitch = to.getPitch();
+
+                                // Skip the first time we do this
+                                if (from.getX() != Double.MAX_VALUE) {
+                                    Location oldTo = to.clone();
+                                    PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                                    this.craftServer.getPluginManager().callEvent(event);
+
+                                    // If the event is cancelled we move the player back to their old location.
+                                    if (event.isCancelled()) {
+                                        teleport(from);
+                                        return;
+                                    }
+
+                                    // If a Plugin has changed the To destination then we teleport the Player
+                                    // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                                    // We only do this if the Event was not cancelled.
+                                    if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                                        this.field_147369_b.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.PLUGIN);
+                                        return;
+                                    }
+
+                                    // Check to see if the Players Location has some how changed during the call of the event.
+                                    // This can happen due to a plugin teleporting the player instead of using .setTo()
+                                    if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported) {
+                                        this.justTeleported = false;
+                                        return;
+                                    }
+                                }
+                            }
+                            this.field_147369_b.func_70080_a(d4, d5, d6, f, f1); // Copied from above
+                            // CraftBukkit end
+
+                            this.field_184344_B = d12 >= -0.03125D;
                             this.field_184344_B &= !this.field_147367_d.func_71231_X() && !this.field_147369_b.field_71075_bZ.field_75101_c;
-                            this.field_184344_B &= !this.field_147369_b.func_70644_a(MobEffects.field_188424_y)
-                                                   && !this.field_147369_b.func_184613_cA()
-                                                   && !worldserver.func_72829_c(this.field_147369_b.func_174813_aQ().func_186662_g(0.0625).func_72321_a(0.0, -0.55, 0.0));
+                            this.field_184344_B &= !this.field_147369_b.func_70644_a(MobEffects.field_188424_y) && !this.field_147369_b.func_184613_cA() && !worldserver.func_72829_c(this.field_147369_b.func_174813_aQ().func_186662_g(0.0625D).func_72321_a(0.0D, -0.55D, 0.0D));
                             this.field_147369_b.field_70122_E = p_147347_1_.func_149465_i();
                             this.field_147367_d.func_184103_al().func_72358_d(this.field_147369_b);
                             this.field_147369_b.func_71122_b(this.field_147369_b.field_70163_u - d3, p_147347_1_.func_149465_i());
@@ -665,26 +910,98 @@
         this.func_175089_a(p_147364_1_, p_147364_3_, p_147364_5_, p_147364_7_, p_147364_8_, Collections.emptySet());
     }
 
-    public void func_175089_a(
-        double p_175089_1_, double p_175089_3_, double p_175089_5_, float p_175089_7_, float p_175089_8_, Set<SPacketPlayerPosLook.EnumFlags> p_175089_9_
-    )
+    // CraftBukkit start - Delegate to teleport(Location)
+    public void setPlayerLocation(double d0, double d1, double d2, float f, float f1, PlayerTeleportEvent.TeleportCause cause) {
+        this.setPlayerLocation(d0, d1, d2, f, f1, Collections.emptySet(), cause);
+    }
+
+    public void func_175089_a(double p_175089_1_, double p_175089_3_, double p_175089_5_, float p_175089_7_, float p_175089_8_, Set<SPacketPlayerPosLook.EnumFlags> p_175089_9_)
     {
-        double d0 = p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.X) ? this.field_147369_b.field_70165_t : 0.0;
-        double d1 = p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Y) ? this.field_147369_b.field_70163_u : 0.0;
-        double d2 = p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Z) ? this.field_147369_b.field_70161_v : 0.0;
-        this.field_184362_y = new Vec3d(p_175089_1_ + d0, p_175089_3_ + d1, p_175089_5_ + d2);
-        float f = p_175089_7_;
-        float f1 = p_175089_8_;
-
-        if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT))
-        {
-            f = p_175089_7_ + this.field_147369_b.field_70177_z;
-        }
-
-        if (p_175089_9_.contains(SPacketPlayerPosLook.EnumFlags.X_ROT))
-        {
-            f1 = p_175089_8_ + this.field_147369_b.field_70125_A;
-        }
+        this.setPlayerLocation(p_175089_1_, p_175089_3_, p_175089_5_, p_175089_7_, p_175089_8_, p_175089_9_, PlayerTeleportEvent.TeleportCause.UNKNOWN);
+    }
+
+    public void setPlayerLocation(double d0, double d1, double d2, float f, float f1, Set<SPacketPlayerPosLook.EnumFlags> set, PlayerTeleportEvent.TeleportCause cause) {
+        Player player = this.getPlayer();
+        Location from = player.getLocation();
+
+        double x = d0;
+        double y = d1;
+        double z = d2;
+        float yaw = f;
+        float pitch = f1;
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.X)) {
+            x += from.getX();
+        }
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.Y)) {
+            y += from.getY();
+        }
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.Z)) {
+            z += from.getZ();
+        }
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT)) {
+            yaw += from.getYaw();
+        }
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.X_ROT)) {
+            pitch += from.getPitch();
+        }
+
+
+        Location to = new Location(this.getPlayer().getWorld(), x, y, z, yaw, pitch);
+        PlayerTeleportEvent event = new PlayerTeleportEvent(player, from.clone(), to.clone(), cause);
+        this.craftServer.getPluginManager().callEvent(event);
+
+        if (event.isCancelled() || !to.equals(event.getTo())) {
+            set.clear(); // Can't relative teleport
+            to = event.isCancelled() ? event.getFrom() : event.getTo();
+            d0 = to.getX();
+            d1 = to.getY();
+            d2 = to.getZ();
+            f = to.getYaw();
+            f1 = to.getPitch();
+        }
+
+        this.internalTeleport(d0, d1, d2, f, f1, set);
+    }
+
+    public void teleport(Location dest) {
+        internalTeleport(dest.getX(), dest.getY(), dest.getZ(), dest.getYaw(), dest.getPitch(), Collections.emptySet());
+    }
+
+    private void internalTeleport(double x, double y, double z, float yaw, float pitch, Set<SPacketPlayerPosLook.EnumFlags> relativeSet) {
+        // CraftBukkit start
+        if (Float.isNaN(yaw)) {
+            yaw = 0;
+        }
+        if (Float.isNaN(pitch)) {
+            pitch = 0;
+        }
+
+        this.justTeleported = true;
+        // CraftBukkit end
+        double d0 = relativeSet.contains(SPacketPlayerPosLook.EnumFlags.X) ? this.field_147369_b.field_70165_t : 0.0D;
+        double d1 = relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Y) ? this.field_147369_b.field_70163_u : 0.0D;
+        double d2 = relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Z) ? this.field_147369_b.field_70161_v : 0.0D;
+        this.field_184362_y = new Vec3d(x + d0, y + d1, z + d2);
+        float f = yaw;
+        float f1 = pitch;
+
+        if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT))
+        {
+            f = yaw + this.field_147369_b.field_70177_z;
+        }
+
+        if (relativeSet.contains(SPacketPlayerPosLook.EnumFlags.X_ROT))
+        {
+            f1 = pitch + this.field_147369_b.field_70125_A;
+        }
+
+        // CraftBukkit start - update last location
+        this.lastPosX = this.field_184362_y.field_72450_a;
+        this.lastPosY = this.field_184362_y.field_72448_b;
+        this.lastPosZ = this.field_184362_y.field_72449_c;
+        this.lastYaw = f;
+        this.lastPitch = f1;
+        // CraftBukkit end
 
         if (++this.field_184363_z == Integer.MAX_VALUE)
         {
@@ -693,15 +1010,13 @@
 
         this.field_184343_A = this.field_147368_e;
         this.field_147369_b.func_70080_a(this.field_184362_y.field_72450_a, this.field_184362_y.field_72448_b, this.field_184362_y.field_72449_c, f, f1);
-        this.field_147369_b
-        .field_71135_a
-        .func_147359_a(new SPacketPlayerPosLook(p_175089_1_, p_175089_3_, p_175089_5_, p_175089_7_, p_175089_8_, p_175089_9_, this.field_184363_z));
+        this.field_147369_b.field_71135_a.func_147359_a(new SPacketPlayerPosLook(x, y, z, yaw, pitch, relativeSet, this.field_184363_z));
     }
 
-    @Override
     public void func_147345_a(CPacketPlayerDigging p_147345_1_)
     {
         PacketThreadUtil.func_180031_a(p_147345_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
         BlockPos blockpos = p_147345_1_.func_179715_a();
         this.field_147369_b.func_143004_u();
@@ -712,8 +1027,18 @@
 
                 if (!this.field_147369_b.func_175149_v())
                 {
+                    if (this.field_147369_b.field_71070_bA != this.field_147369_b.field_71069_bz) return; // CatServer
                     ItemStack itemstack = this.field_147369_b.func_184586_b(EnumHand.OFF_HAND);
-                    this.field_147369_b.func_184611_a(EnumHand.OFF_HAND, this.field_147369_b.func_184586_b(EnumHand.MAIN_HAND));
+                    // this.player.setHeldItem(EnumHand.OFF_HAND, this.player.getHeldItem(EnumHand.MAIN_HAND));
+                    // CraftBukkit start
+                    PlayerSwapHandItemsEvent swapItemsEvent = new PlayerSwapHandItemsEvent(getPlayer(), CraftItemStack.asBukkitCopy(itemstack), CraftItemStack.asBukkitCopy(this.field_147369_b.func_184586_b(EnumHand.MAIN_HAND)));
+                    this.craftServer.getPluginManager().callEvent(swapItemsEvent);
+                    if (swapItemsEvent.isCancelled()) {
+                        return;
+                    }
+                    itemstack = CraftItemStack.asNMSCopy(swapItemsEvent.getMainHandItem());
+                    this.field_147369_b.func_184611_a(EnumHand.OFF_HAND, CraftItemStack.asNMSCopy(swapItemsEvent.getOffHandItem()));
+                    // CraftBukkit end
                     this.field_147369_b.func_184611_a(EnumHand.MAIN_HAND, itemstack);
                 }
 
@@ -722,6 +1047,21 @@
 
                 if (!this.field_147369_b.func_175149_v())
                 {
+                    if (this.field_147369_b.field_71070_bA != this.field_147369_b.field_71069_bz) return; // CatServer
+                    // limit how quickly items can be dropped
+                    // If the ticks aren't the same then the count starts from 0 and we update the lastDropTick.
+                    if (this.lastDropTick != MinecraftServer.currentTick) {
+                        this.dropCount = 0;
+                        this.lastDropTick = MinecraftServer.currentTick;
+                    } else {
+                        // Else we increment the drop count and check the amount.
+                        this.dropCount++;
+                        if (this.dropCount >= 20) {
+                            field_147370_c.warn(this.field_147369_b.func_70005_c_() + " dropped their items too quickly!");
+                            this.disconnect("You dropped your items too quickly (Hacking?)");
+                            return;
+                        }
+                    }
                     this.field_147369_b.func_71040_bB(false);
                 }
 
@@ -730,22 +1070,33 @@
 
                 if (!this.field_147369_b.func_175149_v())
                 {
+                    if (this.field_147369_b.field_71070_bA != this.field_147369_b.field_71069_bz) return; // CatServer
                     this.field_147369_b.func_71040_bB(true);
                 }
 
                 return;
             case RELEASE_USE_ITEM:
+                // CatServer start
+                if (catserver.server.CatServer.getConfig().releaseUseItemThrottle > 0 && this.releasedUseItemThrottle++ >= catserver.server.CatServer.getConfig().releaseUseItemThrottle) {
+                    field_147370_c.warn(this.field_147369_b.func_70005_c_() + " released use item too quickly!");
+                    this.disconnect("You released use item too quickly (Hacking?)");
+                    return;
+                }
+                // CatServer end
                 this.field_147369_b.func_184597_cx();
                 return;
             case START_DESTROY_BLOCK:
             case ABORT_DESTROY_BLOCK:
             case STOP_DESTROY_BLOCK:
-                double d0 = this.field_147369_b.field_70165_t - ((double)blockpos.func_177958_n() + 0.5);
-                double d1 = this.field_147369_b.field_70163_u - ((double)blockpos.func_177956_o() + 0.5) + 1.5;
-                double d2 = this.field_147369_b.field_70161_v - ((double)blockpos.func_177952_p() + 0.5);
+                double d0 = this.field_147369_b.field_70165_t - ((double)blockpos.func_177958_n() + 0.5D);
+                double d1 = this.field_147369_b.field_70163_u - ((double)blockpos.func_177956_o() + 0.5D) + 1.5D;
+                double d2 = this.field_147369_b.field_70161_v - ((double)blockpos.func_177952_p() + 0.5D);
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (d3 > 36.0)
+                double dist = field_147369_b.func_110148_a(EntityPlayer.REACH_DISTANCE).func_111126_e() + 1;
+                dist *= dist;
+
+                if (d3 > dist)
                 {
                     return;
                 }
@@ -763,7 +1114,15 @@
                         }
                         else
                         {
+                            // CraftBukkit start - fire PlayerInteractEvent
+                            CraftEventFactory.callPlayerInteractEvent(this.field_147369_b, Action.LEFT_CLICK_BLOCK, blockpos, p_147345_1_.func_179714_b(), this.field_147369_b.field_71071_by.func_70448_g(), EnumHand.MAIN_HAND);
                             this.field_147369_b.field_71135_a.func_147359_a(new SPacketBlockChange(worldserver, blockpos));
+                            // Update any tile entity data for this block
+                            TileEntity tileentity = worldserver.func_175625_s(blockpos);
+                            if (tileentity != null) {
+                                this.field_147369_b.field_71135_a.func_147359_a(tileentity.func_189518_D_());
+                            }
+                            // CraftBukkit end
                         }
                     }
                     else
@@ -791,10 +1150,10 @@
         }
     }
 
-    @Override
     public void func_184337_a(CPacketPlayerTryUseItemOnBlock p_184337_1_)
     {
         PacketThreadUtil.func_180031_a(p_184337_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
         EnumHand enumhand = p_184337_1_.func_187022_c();
         ItemStack itemstack = this.field_147369_b.func_184586_b(enumhand);
@@ -802,34 +1161,25 @@
         EnumFacing enumfacing = p_184337_1_.func_187024_b();
         this.field_147369_b.func_143004_u();
 
-        if (blockpos.func_177956_o() < this.field_147367_d.func_71207_Z() - 1
-                || enumfacing != EnumFacing.UP && blockpos.func_177956_o() < this.field_147367_d.func_71207_Z())
+        if (blockpos.func_177956_o() < this.field_147367_d.func_71207_Z() - 1 || enumfacing != EnumFacing.UP && blockpos.func_177956_o() < this.field_147367_d.func_71207_Z())
         {
-            if (this.field_184362_y == null
-                    && this.field_147369_b
-                    .func_70092_e((double)blockpos.func_177958_n() + 0.5, (double)blockpos.func_177956_o() + 0.5, (double)blockpos.func_177952_p() + 0.5)
-                    < 64.0
-                    && !this.field_147367_d.func_175579_a(worldserver, blockpos, this.field_147369_b)
-                    && worldserver.func_175723_af().func_177746_a(blockpos))
+            double dist = field_147369_b.func_110148_a(EntityPlayer.REACH_DISTANCE).func_111126_e() + 3;
+            dist *= dist;
+            if (this.field_184362_y == null && this.field_147369_b.func_70092_e((double)blockpos.func_177958_n() + 0.5D, (double)blockpos.func_177956_o() + 0.5D, (double)blockpos.func_177952_p() + 0.5D) < dist && !this.field_147367_d.func_175579_a(worldserver, blockpos, this.field_147369_b) && worldserver.func_175723_af().func_177746_a(blockpos))
             {
-                this.field_147369_b
-                .field_71134_c
-                .func_187251_a(
-                    this.field_147369_b,
-                    worldserver,
-                    itemstack,
-                    enumhand,
-                    blockpos,
-                    enumfacing,
-                    p_184337_1_.func_187026_d(),
-                    p_184337_1_.func_187025_e(),
-                    p_184337_1_.func_187020_f()
-                );
+                // CraftBukkit start - Check if we can actually do something over this large a distance
+                Location eyeLoc = this.getPlayer().getEyeLocation();
+                double reachDistance = NumberConversions.square(eyeLoc.getX() - blockpos.func_177958_n()) + NumberConversions.square(eyeLoc.getY() - blockpos.func_177956_o()) + NumberConversions.square(eyeLoc.getZ() - blockpos.func_177952_p());
+                if (reachDistance > (this.getPlayer().getGameMode() == org.bukkit.GameMode.CREATIVE ? CREATIVE_PLACE_DISTANCE_SQUARED : SURVIVAL_PLACE_DISTANCE_SQUARED)) {
+                    return;
+                }
+                // CraftBukkit end
+                this.field_147369_b.field_71134_c.func_187251_a(this.field_147369_b, worldserver, itemstack, enumhand, blockpos, enumfacing, p_184337_1_.func_187026_d(), p_184337_1_.func_187025_e(), p_184337_1_.func_187020_f());
             }
         }
         else
         {
-            TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("build.tooHigh", this.field_147367_d.func_71207_Z());
+            TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("build.tooHigh", new Object[] {this.field_147367_d.func_71207_Z()});
             textcomponenttranslation.func_150256_b().func_150238_a(TextFormatting.RED);
             this.field_147369_b.field_71135_a.func_147359_a(new SPacketChat(textcomponenttranslation, ChatType.GAME_INFO));
         }
@@ -838,10 +1188,10 @@
         this.field_147369_b.field_71135_a.func_147359_a(new SPacketBlockChange(worldserver, blockpos.func_177972_a(enumfacing)));
     }
 
-    @Override
     public void func_147346_a(CPacketPlayerTryUseItem p_147346_1_)
     {
         PacketThreadUtil.func_180031_a(p_147346_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
         EnumHand enumhand = p_147346_1_.func_187028_a();
         ItemStack itemstack = this.field_147369_b.func_184586_b(enumhand);
@@ -849,11 +1199,49 @@
 
         if (!itemstack.func_190926_b())
         {
-            this.field_147369_b.field_71134_c.func_187250_a(this.field_147369_b, worldserver, itemstack, enumhand);
+            // this.player.interactionManager.processRightClick(this.player, worldserver, itemstack, enumhand);
+            // CraftBukkit start
+            // Raytrace to look for 'rogue armswings'
+            float f1 = this.field_147369_b.field_70125_A;
+            float f2 = this.field_147369_b.field_70177_z;
+            double d0 = this.field_147369_b.field_70165_t;
+            double d1 = this.field_147369_b.field_70163_u + (double) this.field_147369_b.func_70047_e();
+            double d2 = this.field_147369_b.field_70161_v;
+            Vec3d vec3d = new Vec3d(d0, d1, d2);
+
+            float f3 = MathHelper.func_76134_b(-f2 * 0.017453292F - 3.1415927F);
+            float f4 = MathHelper.func_76126_a(-f2 * 0.017453292F - 3.1415927F);
+            float f5 = -MathHelper.func_76134_b(-f1 * 0.017453292F);
+            float f6 = MathHelper.func_76126_a(-f1 * 0.017453292F);
+            float f7 = f4 * f5;
+            float f8 = f3 * f5;
+            double d3 = field_147369_b.field_71134_c.func_73081_b()== GameType.CREATIVE ? 5.0D : 4.5D;
+            Vec3d vec3d1 = vec3d.func_72441_c((double) f7 * d3, (double) f6 * d3, (double) f8 * d3);
+            RayTraceResult movingobjectposition = this.field_147369_b.field_70170_p.func_72901_a(vec3d, vec3d1, false);
+
+            boolean cancelled;
+            if (movingobjectposition == null || movingobjectposition.field_72313_a != RayTraceResult.Type.BLOCK) {
+                org.bukkit.event.player.PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(this.field_147369_b, Action.RIGHT_CLICK_AIR, itemstack, enumhand);
+                cancelled = event.useItemInHand() == Event.Result.DENY;
+            } else {
+                if (field_147369_b.field_71134_c.firedInteract) {
+                    field_147369_b.field_71134_c.firedInteract = false;
+                    cancelled = field_147369_b.field_71134_c.interactResult;
+                } else {
+                    org.bukkit.event.player.PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(field_147369_b, Action.RIGHT_CLICK_BLOCK, movingobjectposition.func_178782_a(), movingobjectposition.field_178784_b, itemstack, true, enumhand);
+                    cancelled = event.useItemInHand() == Event.Result.DENY;
+                }
+            }
+
+            if (cancelled) {
+                this.field_147369_b.getBukkitEntity().updateInventory(); // SPIGOT-2524
+            } else {
+                this.field_147369_b.field_71134_c.func_187250_a(this.field_147369_b, worldserver, itemstack, enumhand);
+            }
+            // CraftBukkit end
         }
     }
 
-    @Override
     public void func_175088_a(CPacketSpectate p_175088_1_)
     {
         PacketThreadUtil.func_180031_a(p_175088_1_, this, this.field_147369_b.func_71121_q());
@@ -862,7 +1250,8 @@
         {
             Entity entity = null;
 
-            for (WorldServer worldserver : this.field_147367_d.field_71305_c)
+            // CraftBukkit - use the worlds array list
+            for (WorldServer worldserver : this.field_147367_d.worldServerList)
             {
                 if (worldserver != null)
                 {
@@ -880,52 +1269,52 @@
                 this.field_147369_b.func_175399_e(this.field_147369_b);
                 this.field_147369_b.func_184210_p();
 
-                if (entity.field_70170_p == this.field_147369_b.field_70170_p)
+                /* CraftBukkit start - replace with bukkit handling for multi-world
+                if (entity.world == this.player.world)
                 {
-                    this.field_147369_b.func_70634_a(entity.field_70165_t, entity.field_70163_u, entity.field_70161_v);
+                    this.player.setPositionAndUpdate(entity.posX, entity.posY, entity.posZ);
                 }
-                else
+                else if (net.minecraftforge.common.ForgeHooks.onTravelToDimension(this.player, entity.dimension))
                 {
-                    WorldServer worldserver1 = this.field_147369_b.func_71121_q();
-                    WorldServer worldserver2 = (WorldServer)entity.field_70170_p;
-                    this.field_147369_b.field_71093_bK = entity.field_71093_bK;
-                    this.func_147359_a(
-                        new SPacketRespawn(
-                            this.field_147369_b.field_71093_bK,
-                            worldserver1.func_175659_aa(),
-                            worldserver1.func_72912_H().func_76067_t(),
-                            this.field_147369_b.field_71134_c.func_73081_b()
-                        )
-                    );
-                    this.field_147367_d.func_184103_al().func_187243_f(this.field_147369_b);
-                    worldserver1.func_72973_f(this.field_147369_b);
-                    this.field_147369_b.field_70128_L = false;
-                    this.field_147369_b.func_70012_b(entity.field_70165_t, entity.field_70163_u, entity.field_70161_v, entity.field_70177_z, entity.field_70125_A);
+                    int prevDimension = this.player.dimension;
+                    WorldServer worldserver1 = this.player.getServerWorld();
+                    WorldServer worldserver2 = (WorldServer)entity.world;
+                    this.player.dimension = entity.dimension;
+                    this.sendPacket(new SPacketRespawn(this.player.dimension, worldserver2.getDifficulty(), worldserver2.getWorldInfo().getTerrainType(), this.player.interactionManager.getGameType())); // Forge: Use new dimensions information
+                    this.serverController.getPlayerList().updatePermissionLevel(this.player);
+                    worldserver1.removeEntityDangerously(this.player);
+                    this.player.isDead = false;
+                    this.player.setLocationAndAngles(entity.posX, entity.posY, entity.posZ, entity.rotationYaw, entity.rotationPitch);
 
-                    if (this.field_147369_b.func_70089_S())
+                    if (this.player.isEntityAlive())
                     {
-                        worldserver1.func_72866_a(this.field_147369_b, false);
-                        worldserver2.func_72838_d(this.field_147369_b);
-                        worldserver2.func_72866_a(this.field_147369_b, false);
+                        worldserver1.updateEntityWithOptionalForce(this.player, false);
+                        worldserver2.spawnEntity(this.player);
+                        worldserver2.updateEntityWithOptionalForce(this.player, false);
                     }
 
-                    this.field_147369_b.func_70029_a(worldserver2);
-                    this.field_147367_d.func_184103_al().func_72375_a(this.field_147369_b, worldserver1);
-                    this.field_147369_b.func_70634_a(entity.field_70165_t, entity.field_70163_u, entity.field_70161_v);
-                    this.field_147369_b.field_71134_c.func_73080_a(worldserver2);
-                    this.field_147367_d.func_184103_al().func_72354_b(this.field_147369_b, worldserver2);
-                    this.field_147367_d.func_184103_al().func_72385_f(this.field_147369_b);
+                    this.player.setWorld(worldserver2);
+                    this.serverController.getPlayerList().preparePlayer(this.player, worldserver1);
+                    this.player.setPositionAndUpdate(entity.posX, entity.posY, entity.posZ);
+                    this.player.interactionManager.setWorld(worldserver2);
+                    this.serverController.getPlayerList().updateTimeAndWeatherForPlayer(this.player, worldserver2);
+                    this.serverController.getPlayerList().syncPlayerInventory(this.player);
+                    net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerChangedDimensionEvent(this.player, prevDimension, this.player.dimension);
                 }
+                */
+                if ((entity.field_70170_p != this.field_147369_b.field_70170_p) && !net.minecraftforge.common.ForgeHooks.onTravelToDimension(this.field_147369_b, entity.field_71093_bK))
+                    return;
+                this.field_147369_b.getBukkitEntity().teleport(entity.getBukkitEntity(), PlayerTeleportEvent.TeleportCause.SPECTATE);
             }
         }
     }
 
-    @Override
     public void func_175086_a(CPacketResourcePackStatus p_175086_1_)
     {
+        PacketThreadUtil.func_180031_a(p_175086_1_, this, this.field_147369_b.func_71121_q());
+        this.craftServer.getPluginManager().callEvent(new PlayerResourcePackStatusEvent(getPlayer(), PlayerResourcePackStatusEvent.Status.values()[p_175086_1_.field_179719_b.ordinal()]));
     }
 
-    @Override
     public void func_184340_a(CPacketSteerBoat p_184340_1_)
     {
         PacketThreadUtil.func_180031_a(p_184340_1_, this, this.field_147369_b.func_71121_q());
@@ -937,16 +1326,29 @@
         }
     }
 
-    @Override
     public void func_147231_a(ITextComponent p_147231_1_)
     {
+        // CraftBukkit start - Rarely it would send a disconnect line twice
+        if (this.processedDisconnect) {
+            return;
+        } else {
+            this.processedDisconnect = true;
+        }
+        // CraftBukkit end
         field_147370_c.info("{} lost connection: {}", this.field_147369_b.func_70005_c_(), p_147231_1_.func_150260_c());
+        // CraftBukkit start - Replace vanilla quit message handling with our own.
+        /*
+        TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("multiplayer.player.left", new Object[] {this.player.getDisplayName()});
+        textcomponenttranslation.getStyle().setColor(TextFormatting.YELLOW);
+        this.serverController.getPlayerList().sendMessage(textcomponenttranslation);
+        */
         this.field_147367_d.func_147132_au();
-        TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("multiplayer.player.left", this.field_147369_b.func_145748_c_());
-        textcomponenttranslation.func_150256_b().func_150238_a(TextFormatting.YELLOW);
-        this.field_147367_d.func_184103_al().func_148539_a(textcomponenttranslation);
         this.field_147369_b.func_71123_m();
-        this.field_147367_d.func_184103_al().func_72367_e(this.field_147369_b);
+        // this.serverController.getPlayerList().playerLoggedOut(this.player);
+        String quitMessage = this.field_147367_d.func_184103_al().playerLoggedOut(this.field_147369_b);
+        if ((quitMessage != null) && (quitMessage.length() > 0)) {
+            this.field_147367_d.func_184103_al().sendMessage(CraftChatMessage.fromString(quitMessage));
+        }
 
         if (this.field_147367_d.func_71264_H() && this.field_147369_b.func_70005_c_().equals(this.field_147367_d.func_71214_G()))
         {
@@ -973,6 +1375,13 @@
             }
         }
 
+        if (p_147359_1_ == null) {
+            return;
+        } else if (p_147359_1_ instanceof SPacketSpawnPosition) {
+            SPacketSpawnPosition packet6 = (SPacketSpawnPosition) p_147359_1_;
+            this.field_147369_b.compassTarget = new Location(this.getPlayer().getWorld(), packet6.field_179801_a.func_177958_n(), packet6.field_179801_a.func_177956_o(), packet6.field_179801_a.func_177952_p());
+        }
+
         try
         {
             this.field_147371_a.func_179290_a(p_147359_1_);
@@ -992,30 +1401,47 @@
         }
     }
 
-    @Override
     public void func_147355_a(CPacketHeldItemChange p_147355_1_)
     {
         PacketThreadUtil.func_180031_a(p_147355_1_, this, this.field_147369_b.func_71121_q());
-
+        if (this.field_147369_b.func_70610_aX()) return;
         if (p_147355_1_.func_149614_c() >= 0 && p_147355_1_.func_149614_c() < InventoryPlayer.func_70451_h())
         {
+            PlayerItemHeldEvent event = new PlayerItemHeldEvent(this.getPlayer(), this.field_147369_b.field_71071_by.field_70461_c, p_147355_1_.func_149614_c());
+            this.craftServer.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                this.func_147359_a(new SPacketHeldItemChange(this.field_147369_b.field_71071_by.field_70461_c));
+                this.field_147369_b.func_143004_u();
+                return;
+            }
             this.field_147369_b.field_71071_by.field_70461_c = p_147355_1_.func_149614_c();
             this.field_147369_b.func_143004_u();
         }
         else
         {
-            field_147370_c.warn("{} tried to set an invalid carried item", this.field_147369_b.func_70005_c_());
+            field_147370_c.warn("{} tried to set an invalid carried item", (Object)this.field_147369_b.func_70005_c_());
+            // this.disconnect("Nope!"); // CraftBukkit // CatServer - Don't disconnect, some mod may send wrong packets
         }
     }
 
-    @Override
     public void func_147354_a(CPacketChatMessage p_147354_1_)
     {
-        PacketThreadUtil.func_180031_a(p_147354_1_, this, this.field_147369_b.func_71121_q());
+        // PacketThreadUtil.checkThreadAndEnqueue(packetIn, this, this.player.getServerWorld());
+        // CraftBukkit start - async chat
+        // SPIGOT-3638
+        if (this.field_147367_d.func_71241_aa()) {
+            return;
+        }
+
+        boolean isSync = p_147354_1_.func_149439_c().startsWith("/");
+        if (p_147354_1_.func_149439_c().startsWith("/")) {
+            PacketThreadUtil.func_180031_a(p_147354_1_, this, this.field_147369_b.func_71121_q());
+        }
+        // CraftBukkit end
 
         if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.HIDDEN)
         {
-            TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("chat.cannotSend");
+            TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("chat.cannotSend", new Object[0]);
             textcomponenttranslation.func_150256_b().func_150238_a(TextFormatting.RED);
             this.func_147359_a(new SPacketChat(textcomponenttranslation));
         }
@@ -1029,47 +1455,310 @@
             {
                 if (!ChatAllowedCharacters.func_71566_a(s.charAt(i)))
                 {
-                    this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.illegal_characters"));
+                    // this.disconnect(new TextComponentTranslation("multiplayer.disconnect.illegal_characters", new Object[0]));
+                    // CraftBukkit start - threadsafety
+                    if (!isSync) {
+                        Waitable waitable = new Waitable() {
+                            @Override
+                            protected Object evaluate() {
+                                NetHandlerPlayServer.this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.illegal_characters", new Object[0]));
+                                return null;
+                            }
+                        };
+
+                        this.field_147367_d.processQueue.add(waitable);
+
+                        try {
+                            waitable.get();
+                        } catch (InterruptedException e) {
+                            Thread.currentThread().interrupt();
+                        } catch (ExecutionException e) {
+                            throw new RuntimeException(e);
+                        }
+                    } else {
+                        this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.illegal_characters", new Object[0]));
+                    }
+                    // CraftBukkit end
                     return;
                 }
             }
 
-            if (s.startsWith("/"))
-            {
-                this.func_147361_d(s);
+            // CraftBukkit start
+            if (isSync) {
+                try {
+                    this.field_147367_d.server.playerCommandState = true;
+                    this.func_147361_d(s);
+                } finally {
+                    this.field_147367_d.server.playerCommandState = false;
+                }
+            } else if (s.isEmpty()) {
+                field_147370_c.warn(this.field_147369_b.func_70005_c_() + " tried to send an empty message");
+            } else if (getPlayer().isConversing()) {
+                getPlayer().acceptConversationInput(s);
+            } else if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.SYSTEM) { // Re-add "Command Only" flag check
+                TextComponentTranslation chatmessage = new TextComponentTranslation("chat.cannotSend", new Object[0]);
+
+                chatmessage.func_150256_b().func_150238_a(TextFormatting.RED);
+                this.func_147359_a(new SPacketChat(chatmessage));
+            } else if (true) {
+                catserver.server.threads.AsyncChatThread.chat(this, s); // CatServer - Async chat
+                // CraftBukkit end - the below is for reference. :)
             }
+            /*
             else
             {
-                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", this.field_147369_b.func_145748_c_(), s);
-                this.field_147367_d.func_184103_al().func_148544_a(itextcomponent, false);
+                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", this.player.getDisplayName(), net.minecraftforge.common.ForgeHooks.newChatWithLinks(s));
+                itextcomponent = net.minecraftforge.common.ForgeHooks.onServerChatEvent(this, s, itextcomponent);
+                if (itextcomponent == null) return;
+                this.serverController.getPlayerList().sendMessage(itextcomponent, false);
             }
-
-            this.field_147374_l += 20;
-
-            if (this.field_147374_l > 200 && !this.field_147367_d.func_184103_al().func_152596_g(this.field_147369_b.func_146103_bH()))
+            */
+
+            // Spigot start - spam exclusions
+            boolean counted = true;
+            for (String exclude : org.spigotmc.SpigotConfig.spamExclusions)
             {
-                this.func_194028_b(new TextComponentTranslation("disconnect.spam"));
+                if (exclude != null && s.startsWith(exclude))
+                {
+                    counted = false;
+                    break;
+                }
+            }
+            // Spigot end
+            // CraftBukkit start - replaced with thread safe throttle
+            // this.chatThrottle += 20;
+            if (counted && chatSpamField.addAndGet(this, 20) > 200 && !this.field_147367_d.func_184103_al().func_152596_g(this.field_147369_b.func_146103_bH())) {
+                if (!isSync) {
+                    Waitable waitable = new Waitable() {
+                        @Override
+                        protected Object evaluate() {
+                            NetHandlerPlayServer.this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+                            return null;
+                        }
+                    };
+
+                    this.field_147367_d.processQueue.add(waitable);
+
+                    try {
+                        waitable.get();
+                    } catch (InterruptedException e) {
+                        Thread.currentThread().interrupt();
+                    } catch (ExecutionException e) {
+                        throw new RuntimeException(e);
+                    }
+                } else {
+                    this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+                }
+                // CraftBukkit end
+            }
+        }
+    }
+
+    public void chat(String s, boolean async) {
+        if (s.isEmpty() || this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.HIDDEN) {
+            return;
+        }
+
+        if (!async && s.startsWith("/")) {
+            this.func_147361_d(s);
+        } else if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.SYSTEM) {
+            // Do nothing, this is coming from a plugin
+        } else {
+            CraftPlayer player = this.getPlayer();
+            AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet(field_147367_d));
+            this.craftServer.getPluginManager().callEvent(event);
+
+            if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+                final String rawMessage = s; // CatServer - Need to final
+                // Evil plugins still listening to deprecated event
+                final PlayerChatEvent queueEvent = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+                queueEvent.setCancelled(event.isCancelled());
+                Waitable waitable = new Waitable() {
+                    @Override
+                    protected Object evaluate() {
+                        org.bukkit.Bukkit.getPluginManager().callEvent(queueEvent);
+
+                        if (queueEvent.isCancelled()) {
+                            return null;
+                        }
+
+                        // CatServer start - handle ServerChatEvent, something move from processChatMessage
+                        NetHandlerPlayServer.this.field_147367_d.console.sendMessage(String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage()));
+
+                        ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", new TextComponentString(queueEvent.getPlayer().getDisplayName()), new TextComponentString(queueEvent.getMessage()));;
+                        itextcomponent = catserver.server.CatServerHooks.onServerChatEvent(NetHandlerPlayServer.this, rawMessage, itextcomponent);
+                        if (itextcomponent == null) return null;
+                        if (itextcomponent instanceof TextComponentTranslation && ((TextComponentTranslation) itextcomponent).func_150271_j().length == 2) {
+                            Object[] formatArgs = ((TextComponentTranslation) itextcomponent).func_150271_j();
+                            String message = String.format(queueEvent.getFormat(), formatArgs[0] instanceof ITextComponent ? ((ITextComponent) formatArgs[0]).func_150261_e() : formatArgs[0].toString(), formatArgs[1] instanceof ITextComponent ? ((ITextComponent) formatArgs[1]).func_150261_e() : formatArgs[1].toString());
+
+                            if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+                                for (EntityPlayerMP recipient : field_147367_d.func_184103_al().func_181057_v()) {
+                                    recipient.sendMessage(CraftChatMessage.fromString(message));
+                                }
+                            } else {
+                                for (Player recipient : queueEvent.getRecipients()) {
+                                    recipient.sendMessage(message);
+                                }
+                            }
+                        } else {
+                            if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+                                for (EntityPlayerMP recipient : field_147367_d.func_184103_al().func_181057_v()) {
+                                    recipient.func_145747_a(itextcomponent);
+                                }
+                            } else {
+                                for (Player recipient : queueEvent.getRecipients()) {
+                                    ((CraftPlayer)recipient).getHandle().func_145747_a(itextcomponent);
+                                }
+                            }
+                        }
+                        // CatServer end
+
+                        return null;
+                    }};
+                if (async) {
+                    field_147367_d.processQueue.add(waitable);
+                } else {
+                    waitable.run();
+                }
+                try {
+                    waitable.get();
+                } catch (InterruptedException e) {
+                    Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+                } catch (ExecutionException e) {
+                    throw new RuntimeException("Exception processing chat event", e.getCause());
+                }
+            } else {
+                if (event.isCancelled()) {
+                    return;
+                }
+
+                // CatServer start - handle ServerChatEvent, something move from processChatMessage
+                field_147367_d.console.sendMessage(String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage()));
+
+                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", new TextComponentString(event.getPlayer().getDisplayName()), new TextComponentString(event.getMessage()));;
+                itextcomponent = catserver.server.CatServerHooks.onServerChatEvent(this, s, itextcomponent);
+                if (itextcomponent == null) return;
+                if (itextcomponent instanceof TextComponentTranslation && ((TextComponentTranslation) itextcomponent).func_150271_j().length == 2) {
+                    Object[] formatArgs = ((TextComponentTranslation) itextcomponent).func_150271_j();
+                    s = String.format(event.getFormat(), formatArgs[0] instanceof ITextComponent ? ((ITextComponent) formatArgs[0]).func_150261_e() : formatArgs[0].toString(), formatArgs[1] instanceof ITextComponent ? ((ITextComponent) formatArgs[1]).func_150261_e() : formatArgs[1].toString());
+
+                    if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+                        for (EntityPlayerMP recipient : field_147367_d.func_184103_al().func_181057_v()) {
+                            recipient.sendMessage(CraftChatMessage.fromString(s));
+                        }
+                    } else {
+                        for (Player recipient : event.getRecipients()) {
+                            recipient.sendMessage(s);
+                        }
+                    }
+                } else {
+                    if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+                        for (EntityPlayerMP recipient : field_147367_d.func_184103_al().func_181057_v()) {
+                            recipient.func_145747_a(itextcomponent);
+                        }
+                    } else {
+                        for (Player recipient : event.getRecipients()) {
+                            ((CraftPlayer)recipient).getHandle().func_145747_a(itextcomponent);
+                        }
+                    }
+                }
+                // CatServer end
             }
         }
     }
 
     private void func_147361_d(String p_147361_1_)
     {
-        this.field_147367_d.func_71187_D().func_71556_a(this.field_147369_b, p_147361_1_);
+        // CraftBukkit start - whole method
+        org.bukkit.craftbukkit.v1_12_R1.SpigotTimings.playerCommandTimer.startTiming(); // Spigot
+        if (org.spigotmc.SpigotConfig.logCommands) // Spigot
+        this.field_147370_c.info(this.field_147369_b.func_70005_c_() + " issued server command: " + p_147361_1_);
+
+        CraftPlayer player = this.getPlayer();
+
+        PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, p_147361_1_, new LazyPlayerSet(field_147367_d));
+        this.craftServer.getPluginManager().callEvent(event);
+
+        if (event.isCancelled()) {
+            org.bukkit.craftbukkit.v1_12_R1.SpigotTimings.playerCommandTimer.stopTiming(); // Spigot
+            return;
+        }
+
+        try {
+            if (this.craftServer.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+                org.bukkit.craftbukkit.v1_12_R1.SpigotTimings.playerCommandTimer.stopTiming(); // Spigot
+                return;
+            }
+        } catch (org.bukkit.command.CommandException ex) {
+            player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+            java.util.logging.Logger.getLogger(NetHandlerPlayServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
+            return;
+        }
+        org.bukkit.craftbukkit.v1_12_R1.SpigotTimings.playerCommandTimer.stopTiming(); // Spigot
+        // CraftBukkit end
     }
 
-    @Override
     public void func_175087_a(CPacketAnimation p_175087_1_)
     {
         PacketThreadUtil.func_180031_a(p_175087_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         this.field_147369_b.func_143004_u();
+        // CraftBukkit start - Raytrace to look for 'rogue armswings'
+        float f1 = this.field_147369_b.field_70125_A;
+        float f2 = this.field_147369_b.field_70177_z;
+        double d0 = this.field_147369_b.field_70165_t;
+        double d1 = this.field_147369_b.field_70163_u + (double) this.field_147369_b.func_70047_e();
+        double d2 = this.field_147369_b.field_70161_v;
+        Vec3d vec3d = new Vec3d(d0, d1, d2);
+
+        float f3 = MathHelper.func_76134_b(-f2 * 0.017453292F - 3.1415927F);
+        float f4 = MathHelper.func_76126_a(-f2 * 0.017453292F - 3.1415927F);
+        float f5 = -MathHelper.func_76134_b(-f1 * 0.017453292F);
+        float f6 = MathHelper.func_76126_a(-f1 * 0.017453292F);
+        float f7 = f4 * f5;
+        float f8 = f3 * f5;
+        double d3 = field_147369_b.field_71134_c.func_73081_b()== GameType.CREATIVE ? 5.0D : 4.5D;
+        Vec3d vec3d1 = vec3d.func_72441_c((double) f7 * d3, (double) f6 * d3, (double) f8 * d3);
+        RayTraceResult movingobjectposition = this.field_147369_b.field_70170_p.func_72901_a(vec3d, vec3d1, false);
+
+        if (movingobjectposition == null || movingobjectposition.field_72313_a != RayTraceResult.Type.BLOCK) {
+            CraftEventFactory.callPlayerInteractEvent(this.field_147369_b, Action.LEFT_CLICK_AIR, this.field_147369_b.field_71071_by.func_70448_g(), EnumHand.MAIN_HAND);
+        }
+
+        // Arm swing animation
+        PlayerAnimationEvent event = new PlayerAnimationEvent(this.getPlayer());
+        this.craftServer.getPluginManager().callEvent(event);
+
+        if (event.isCancelled()) return;
+        // CraftBukkit end
         this.field_147369_b.func_184609_a(p_175087_1_.func_187018_a());
     }
 
-    @Override
     public void func_147357_a(CPacketEntityAction p_147357_1_)
     {
         PacketThreadUtil.func_180031_a(p_147357_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.field_70128_L) return;
+        switch (p_147357_1_.func_180764_b()) {
+            case START_SNEAKING:
+            case STOP_SNEAKING:
+                PlayerToggleSneakEvent event = new PlayerToggleSneakEvent(this.getPlayer(), p_147357_1_.func_180764_b() == CPacketEntityAction.Action.START_SNEAKING);
+                this.craftServer.getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    return;
+                }
+                break;
+            case START_SPRINTING:
+            case STOP_SPRINTING:
+                PlayerToggleSprintEvent e2 = new PlayerToggleSprintEvent(this.getPlayer(), p_147357_1_.func_180764_b() == CPacketEntityAction.Action.START_SPRINTING);
+                this.craftServer.getPluginManager().callEvent(e2);
+
+                if (e2.isCancelled()) {
+                    return;
+                }
+                break;
+        }
         this.field_147369_b.func_143004_u();
 
         switch (p_147357_1_.func_180764_b())
@@ -1128,10 +1817,7 @@
                 break;
             case START_FALL_FLYING:
 
-                if (!this.field_147369_b.field_70122_E
-                        && this.field_147369_b.field_70181_x < 0.0
-                        && !this.field_147369_b.func_184613_cA()
-                        && !this.field_147369_b.func_70090_H())
+                if (!this.field_147369_b.field_70122_E && this.field_147369_b.field_70181_x < 0.0D && !this.field_147369_b.func_184613_cA() && !this.field_147369_b.func_70090_H())
                 {
                     ItemStack itemstack = this.field_147369_b.func_184582_a(EntityEquipmentSlot.CHEST);
 
@@ -1151,10 +1837,10 @@
         }
     }
 
-    @Override
     public void func_147340_a(CPacketUseEntity p_147340_1_)
     {
         PacketThreadUtil.func_180031_a(p_147340_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
         Entity entity = p_147340_1_.func_149564_a(worldserver);
         this.field_147369_b.func_143004_u();
@@ -1162,41 +1848,83 @@
         if (entity != null)
         {
             boolean flag = this.field_147369_b.func_70685_l(entity);
-            double d0 = 36.0;
+            double d0 = 36.0D;
 
             if (!flag)
             {
-                d0 = 9.0;
+                d0 = 9.0D;
             }
 
             if (this.field_147369_b.func_70068_e(entity) < d0)
             {
+                ItemStack itemInHand = this.field_147369_b.func_184586_b(p_147340_1_.func_186994_b() == null ? EnumHand.MAIN_HAND : p_147340_1_.func_186994_b()); // CraftBukkit
+
+                if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT
+                        || p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT_AT) {
+                    // CraftBukkit start
+                    boolean triggerLeashUpdate = itemInHand != null && itemInHand.func_77973_b() == Items.field_151058_ca && entity instanceof EntityLiving;
+                    Item origItem = this.field_147369_b.field_71071_by.func_70448_g() == null ? null : this.field_147369_b.field_71071_by.func_70448_g().func_77973_b();
+                    PlayerInteractEntityEvent event;
+                    if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT) {
+                        event = new PlayerInteractEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity(), (p_147340_1_.func_186994_b() == EnumHand.OFF_HAND) ? EquipmentSlot.OFF_HAND : EquipmentSlot.HAND);
+                    } else {
+                        Vec3d target = p_147340_1_.func_179712_b();
+                        event = new PlayerInteractAtEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity(), new org.bukkit.util.Vector(target.field_72450_a, target.field_72448_b, target.field_72449_c), (p_147340_1_.func_186994_b() == EnumHand.OFF_HAND) ? EquipmentSlot.OFF_HAND : EquipmentSlot.HAND);
+                    }
+                    this.craftServer.getPluginManager().callEvent(event);
+
+                    if (triggerLeashUpdate && (event.isCancelled() || this.field_147369_b.field_71071_by.func_70448_g() == null || this.field_147369_b.field_71071_by.func_70448_g().func_77973_b() != Items.field_151058_ca)) {
+                        // Refresh the current leash state
+                        this.func_147359_a(new SPacketEntityAttach(entity, ((EntityLiving) entity).func_110166_bE()));
+                    }
+
+                    if (event.isCancelled() || this.field_147369_b.field_71071_by.func_70448_g() == null || this.field_147369_b.field_71071_by.func_70448_g().func_77973_b() != origItem) {
+                        // Refresh the current entity metadata
+                        this.func_147359_a(new SPacketEntityMetadata(entity.func_145782_y(), entity.func_184212_Q(), true));
+                    }
+
+                    if (event.isCancelled()) {
+                        return;
+                    }
+                    // CraftBukkit end
+                }
+
                 if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT)
                 {
                     EnumHand enumhand = p_147340_1_.func_186994_b();
                     this.field_147369_b.func_190775_a(entity, enumhand);
+                    if (!itemInHand.func_190926_b() && itemInHand.func_190916_E() <= -1) {
+                        this.field_147369_b.func_71120_a(this.field_147369_b.field_71070_bA);
+                    }
                 }
                 else if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT_AT)
                 {
                     EnumHand enumhand1 = p_147340_1_.func_186994_b();
+                    if(net.minecraftforge.common.ForgeHooks.onInteractEntityAt(field_147369_b, entity, p_147340_1_.func_179712_b(), enumhand1) != null) return;
                     entity.func_184199_a(this.field_147369_b, p_147340_1_.func_179712_b(), enumhand1);
+                    if (!itemInHand.func_190926_b() && itemInHand.func_190916_E() <= -1) {
+                        this.field_147369_b.func_71120_a(this.field_147369_b.field_71070_bA);
+                    }
                 }
                 else if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.ATTACK)
                 {
-                    if (entity instanceof EntityItem || entity instanceof EntityXPOrb || entity instanceof EntityArrow || entity == this.field_147369_b)
+                    if (entity instanceof EntityItem || entity instanceof EntityXPOrb || entity instanceof EntityArrow || (entity == this.field_147369_b && !field_147369_b.func_175149_v()))
                     {
-                        this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.invalid_entity_attacked"));
+                        this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.invalid_entity_attacked", new Object[0]));
                         this.field_147367_d.func_71236_h("Player " + this.field_147369_b.func_70005_c_() + " tried to attack an invalid entity");
                         return;
                     }
 
                     this.field_147369_b.func_71059_n(entity);
+
+                    if (!itemInHand.func_190926_b() && itemInHand.func_190916_E() <= -1) {
+                        this.field_147369_b.func_71120_a(this.field_147369_b.field_71070_bA);
+                    }
                 }
             }
         }
     }
 
-    @Override
     public void func_147342_a(CPacketClientStatus p_147342_1_)
     {
         PacketThreadUtil.func_180031_a(p_147342_1_, this, this.field_147369_b.func_71121_q());
@@ -1220,7 +1948,7 @@
                         return;
                     }
 
-                    this.field_147369_b = this.field_147367_d.func_184103_al().func_72368_a(this.field_147369_b, 0, false);
+                    this.field_147369_b = this.field_147367_d.func_184103_al().func_72368_a(this.field_147369_b, field_147369_b.field_71093_bK, false);
 
                     if (this.field_147367_d.func_71199_h())
                     {
@@ -1235,40 +1963,345 @@
         }
     }
 
-    @Override
     public void func_147356_a(CPacketCloseWindow p_147356_1_)
     {
         PacketThreadUtil.func_180031_a(p_147356_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
+        CraftEventFactory.handleInventoryCloseEvent(this.field_147369_b);
         this.field_147369_b.func_71128_l();
     }
 
-    @Override
     public void func_147351_a(CPacketClickWindow p_147351_1_)
     {
         PacketThreadUtil.func_180031_a(p_147351_1_, this, this.field_147369_b.func_71121_q());
+        // CatServer start
+        if (p_147351_1_.func_149546_g().func_77942_o() && catserver.server.CatServer.getConfig().itemNBTThrottle > 0 && this.readItemBookThrottle++ > catserver.server.CatServer.getConfig().itemNBTThrottle) {
+            this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+            return;
+        }
+        // CatServer end
+
+        if (this.field_147369_b.func_70610_aX()) return;
         this.field_147369_b.func_143004_u();
 
-        if (this.field_147369_b.field_71070_bA.field_75152_c == p_147351_1_.func_149548_c()
-                && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b))
+        if (this.field_147369_b.field_71070_bA.field_75152_c == p_147351_1_.func_149548_c() && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b) && this.field_147369_b.field_71070_bA.func_75145_c(this.field_147369_b))
         {
-            if (this.field_147369_b.func_175149_v())
+            boolean cancelled = this.field_147369_b.func_175149_v(); // CraftBukkit - see below if
+            if (false/*this.player.isSpectator()*/)
             {
-                NonNullList<ItemStack> nonnulllist = NonNullList.func_191196_a();
+                NonNullList<ItemStack> nonnulllist = NonNullList.<ItemStack>func_191196_a();
 
                 for (int i = 0; i < this.field_147369_b.field_71070_bA.field_75151_b.size(); ++i)
                 {
-                    nonnulllist.add(this.field_147369_b.field_71070_bA.field_75151_b.get(i).func_75211_c());
+                    nonnulllist.add(((Slot)this.field_147369_b.field_71070_bA.field_75151_b.get(i)).func_75211_c());
                 }
 
                 this.field_147369_b.func_71110_a(this.field_147369_b.field_71070_bA, nonnulllist);
             }
             else
             {
-                ItemStack itemstack2 = this.field_147369_b
-                                       .field_71070_bA
-                                       .func_184996_a(p_147351_1_.func_149544_d(), p_147351_1_.func_149543_e(), p_147351_1_.func_186993_f(), this.field_147369_b);
-
-                if (ItemStack.func_77989_b(p_147351_1_.func_149546_g(), itemstack2))
+                // ItemStack itemstack2 = this.player.openContainer.slotClick(packetIn.getSlotId(), packetIn.getUsedButton(), packetIn.getClickType(), this.player);
+
+                // CraftBukkit start - Call InventoryClickEvent
+                if (p_147351_1_.func_149544_d() < -1 && p_147351_1_.func_149544_d() != -999) {
+                    return;
+                }
+
+                InventoryView inventory = this.field_147369_b.field_71070_bA.getBukkitView();
+
+                // CatServer start - some containers such as NEI's Creative Container does not have a view at this point so we need to create one
+                if (inventory == null)
+                {
+                    inventory = new CraftInventoryView(this.field_147369_b.getBukkitEntity(), MinecraftServer.getServerInst().server.createInventory(this.field_147369_b.getBukkitEntity(), InventoryType.CHEST), this.field_147369_b.field_71070_bA);
+                    this.field_147369_b.field_71070_bA.setBukkitView(inventory);
+                }
+                // CatServer end
+
+                InventoryType.SlotType type = CraftInventoryView.getSlotType(inventory, p_147351_1_.func_149544_d());
+
+                InventoryClickEvent event;
+                ClickType click = ClickType.UNKNOWN;
+                InventoryAction action = InventoryAction.UNKNOWN;
+
+                ItemStack itemstack = ItemStack.field_190927_a;
+
+                switch (p_147351_1_.func_186993_f()) {
+                    case PICKUP:
+                        if (p_147351_1_.func_149543_e() == 0) {
+                            click = ClickType.LEFT;
+                        } else if (p_147351_1_.func_149543_e() == 1) {
+                            click = ClickType.RIGHT;
+                        }
+                        if (p_147351_1_.func_149543_e() == 0 || p_147351_1_.func_149543_e() == 1) {
+                            action = InventoryAction.NOTHING; // Don't want to repeat ourselves
+                            if (p_147351_1_.func_149544_d() == -999) {
+                                if (!field_147369_b.field_71071_by.func_70445_o().func_190926_b()) {
+                                    action = p_147351_1_.func_149543_e() == 0 ? InventoryAction.DROP_ALL_CURSOR : InventoryAction.DROP_ONE_CURSOR;
+                                }
+                            } else if (p_147351_1_.func_149544_d() < 0)  {
+                                action = InventoryAction.NOTHING;
+                            } else {
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d());
+                                if (slot != null) {
+                                    ItemStack clickedItem = slot.func_75211_c();
+                                    ItemStack cursor = field_147369_b.field_71071_by.func_70445_o();
+                                    if (clickedItem.func_190926_b()) {
+                                        if (!cursor.func_190926_b()) {
+                                            action = p_147351_1_.func_149543_e() == 0 ? InventoryAction.PLACE_ALL : InventoryAction.PLACE_ONE;
+                                        }
+                                    } else if (slot.func_82869_a(field_147369_b)) {
+                                        if (cursor.func_190926_b()) {
+                                            action = p_147351_1_.func_149543_e() == 0 ? InventoryAction.PICKUP_ALL : InventoryAction.PICKUP_HALF;
+                                        } else if (slot.func_75214_a(cursor)) {
+                                            if (clickedItem.func_77969_a(cursor) && ItemStack.func_77970_a(clickedItem, cursor)) {
+                                                int toPlace = p_147351_1_.func_149543_e() == 0 ? cursor.func_190916_E() : 1;
+                                                toPlace = Math.min(toPlace, clickedItem.func_77976_d() - clickedItem.func_190916_E());
+                                                toPlace = Math.min(toPlace, slot.field_75224_c.func_70297_j_() - clickedItem.func_190916_E());
+                                                if (toPlace == 1) {
+                                                    action = InventoryAction.PLACE_ONE;
+                                                } else if (toPlace == cursor.func_190916_E()) {
+                                                    action = InventoryAction.PLACE_ALL;
+                                                } else if (toPlace < 0) {
+                                                    action = toPlace != -1 ? InventoryAction.PICKUP_SOME : InventoryAction.PICKUP_ONE; // this happens with oversized stacks
+                                                } else if (toPlace != 0) {
+                                                    action = InventoryAction.PLACE_SOME;
+                                                }
+                                            } else if (cursor.func_190916_E() <= slot.func_75219_a()) {
+                                                action = InventoryAction.SWAP_WITH_CURSOR;
+                                            }
+                                        } else if (cursor.func_77973_b() == clickedItem.func_77973_b() && (!cursor.func_77981_g() || cursor.func_77960_j() == clickedItem.func_77960_j()) && ItemStack.func_77970_a(cursor, clickedItem)) {
+                                            if (clickedItem.func_190916_E() >= 0) {
+                                                if (clickedItem.func_190916_E() + cursor.func_190916_E() <= cursor.func_77976_d()) {
+                                                    // As of 1.5, this is result slots only
+                                                    action = InventoryAction.PICKUP_ALL;
+                                                }
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                        break;
+                    // TODO check on updates
+                    case QUICK_MOVE:
+                        if (p_147351_1_.func_149543_e() == 0) {
+                            click = ClickType.SHIFT_LEFT;
+                        } else if (p_147351_1_.func_149543_e() == 1) {
+                            click = ClickType.SHIFT_RIGHT;
+                        }
+                        if (p_147351_1_.func_149543_e() == 0 || p_147351_1_.func_149543_e() == 1) {
+                            if (p_147351_1_.func_149544_d() < 0) {
+                                action = InventoryAction.NOTHING;
+                            } else {
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d());
+                                if (slot != null && slot.func_82869_a(this.field_147369_b) && slot.func_75216_d()) {
+                                    action = InventoryAction.MOVE_TO_OTHER_INVENTORY;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            }
+                        }
+                        break;
+                    case SWAP:
+                        if (p_147351_1_.func_149543_e() >= 0 && p_147351_1_.func_149543_e() < 9) {
+                            click = ClickType.NUMBER_KEY;
+                            Slot clickedSlot = this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d());
+                            if (clickedSlot.func_82869_a(field_147369_b)) {
+                                ItemStack hotbar = this.field_147369_b.field_71071_by.func_70301_a(p_147351_1_.func_149543_e());
+                                boolean canCleanSwap = hotbar.func_190926_b() || (clickedSlot.field_75224_c == field_147369_b.field_71071_by && clickedSlot.func_75214_a(hotbar)); // the slot will accept the hotbar item
+                                if (clickedSlot.func_75216_d()) {
+                                    if (canCleanSwap) {
+                                        action = InventoryAction.HOTBAR_SWAP;
+                                    } else {
+                                        action = InventoryAction.HOTBAR_MOVE_AND_READD;
+                                    }
+                                } else if (!clickedSlot.func_75216_d() && !hotbar.func_190926_b() && clickedSlot.func_75214_a(hotbar)) {
+                                    action = InventoryAction.HOTBAR_SWAP;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            } else {
+                                action = InventoryAction.NOTHING;
+                            }
+                        }
+                        break;
+                    case CLONE:
+                        if (p_147351_1_.func_149543_e() == 2) {
+                            click = ClickType.MIDDLE;
+                            if (p_147351_1_.func_149544_d() == -999) {
+                                action = InventoryAction.NOTHING;
+                            } else {
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d());
+                                if (slot != null && slot.func_75216_d() && field_147369_b.field_71075_bZ.field_75098_d && field_147369_b.field_71071_by.func_70445_o().func_190926_b()) {
+                                    action = InventoryAction.CLONE_STACK;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            }
+                        } else {
+                            click = ClickType.UNKNOWN;
+                            action = InventoryAction.UNKNOWN;
+                        }
+                        break;
+                    case THROW:
+                        if (p_147351_1_.func_149544_d() >= 0) {
+                            if (p_147351_1_.func_149543_e() == 0) {
+                                click = ClickType.DROP;
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d());
+                                if (slot != null && slot.func_75216_d() && slot.func_82869_a(field_147369_b) && !slot.func_75211_c().func_190926_b() && slot.func_75211_c().func_77973_b() != Item.func_150898_a(Blocks.field_150350_a)) {
+                                    action = InventoryAction.DROP_ONE_SLOT;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            } else if (p_147351_1_.func_149543_e() == 1) {
+                                click = ClickType.CONTROL_DROP;
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d());
+                                if (slot != null && slot.func_75216_d() && slot.func_82869_a(field_147369_b) && !slot.func_75211_c().func_190926_b() && slot.func_75211_c().func_77973_b() != Item.func_150898_a(Blocks.field_150350_a)) {
+                                    action = InventoryAction.DROP_ALL_SLOT;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            }
+                        } else {
+                            // Sane default (because this happens when they are holding nothing. Don't ask why.)
+                            click = ClickType.LEFT;
+                            if (p_147351_1_.func_149543_e() == 1) {
+                                click = ClickType.RIGHT;
+                            }
+                            action = InventoryAction.NOTHING;
+                        }
+                        break;
+                    case QUICK_CRAFT:
+                        itemstack = this.field_147369_b.field_71070_bA.func_184996_a(p_147351_1_.func_149544_d(), p_147351_1_.func_149543_e(), p_147351_1_.func_186993_f(), this.field_147369_b);
+                        break;
+                    case PICKUP_ALL:
+                        click = ClickType.DOUBLE_CLICK;
+                        action = InventoryAction.NOTHING;
+                        if (p_147351_1_.func_149544_d() >= 0 && !this.field_147369_b.field_71071_by.func_70445_o().func_190926_b()) {
+                            ItemStack cursor = this.field_147369_b.field_71071_by.func_70445_o();
+                            action = InventoryAction.NOTHING;
+                            // Quick check for if we have any of the item
+                            if (inventory.getTopInventory().contains(org.bukkit.Material.getMaterial(Item.func_150891_b(cursor.func_77973_b()))) || inventory.getBottomInventory().contains(org.bukkit.Material.getMaterial(Item.func_150891_b(cursor.func_77973_b())))) {
+                                action = InventoryAction.COLLECT_TO_CURSOR;
+                            }
+                        }
+                        break;
+                    default:
+                        break;
+                }
+
+                if (p_147351_1_.func_186993_f() != net.minecraft.inventory.ClickType.QUICK_CRAFT) {
+                    // CatServer start
+                    if (catserver.server.CatServer.getConfig().limitFastClickGUI) {
+                        if (field_147369_b.field_71070_bA != field_147369_b.field_71069_bz && p_147351_1_.func_149544_d() != -999) {
+                            if (alreadyClickGUIThisTick) {
+                                if (fastClickGUIWarnThrottle++ > 5) {
+                                    if (fastClickGUIWarnThrottle % 5 == 0) {
+                                        catserver.server.CatServer.log.warn("Detected player {} fast click gui(Per {} count/tick)", this.field_147369_b.func_70005_c_(), fastClickGUIWarnThrottle);
+                                    }
+                                    if (catserver.server.CatServer.getConfig().clickGUIThrottle > 0 && fastClickGUIWarnThrottle > catserver.server.CatServer.getConfig().clickGUIThrottle) {
+                                        this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+                                        fastClickGUIWarnThrottle = 0;
+                                    }
+                                }
+                                return;
+                            } else {
+                                alreadyClickGUIThisTick = true;
+                            }
+                        }
+                    }
+                    // CatServer end
+
+                    if (click == ClickType.NUMBER_KEY) {
+                        event = new InventoryClickEvent(inventory, type, p_147351_1_.func_149544_d(), click, action, p_147351_1_.func_149543_e());
+                    } else {
+                        event = new InventoryClickEvent(inventory, type, p_147351_1_.func_149544_d(), click, action);
+                    }
+
+                    org.bukkit.inventory.Inventory top = inventory.getTopInventory();
+                    if (p_147351_1_.func_149544_d() == 0 && top instanceof CraftingInventory) {
+                        org.bukkit.inventory.Recipe recipe = ((CraftingInventory) top).getRecipe();
+                        if (recipe != null) {
+                            if (click == ClickType.NUMBER_KEY) {
+                                event = new CraftItemEvent(recipe, inventory, type, p_147351_1_.func_149544_d(), click, action, p_147351_1_.func_149543_e());
+                            } else {
+                                event = new CraftItemEvent(recipe, inventory, type, p_147351_1_.func_149544_d(), click, action);
+                            }
+                        }
+                    }
+
+                    event.setCancelled(cancelled);
+                    Container oldContainer = this.field_147369_b.field_71070_bA; // SPIGOT-1224
+                    craftServer.getPluginManager().callEvent(event);
+                    if (this.field_147369_b.field_71070_bA != oldContainer) {
+                        return;
+                    }
+
+                    switch (event.getResult()) {
+                        case ALLOW:
+                        case DEFAULT:
+                            itemstack = this.field_147369_b.field_71070_bA.func_184996_a(p_147351_1_.func_149544_d(), p_147351_1_.func_149543_e(), p_147351_1_.func_186993_f(), this.field_147369_b);
+                            break;
+                        case DENY:
+                            /* Needs enum constructor in InventoryAction
+                            if (action.modifiesOtherSlots()) {
+
+                            } else {
+                                if (action.modifiesCursor()) {
+                                    this.player.playerConnection.sendPacket(new Packet103SetSlot(-1, -1, this.player.inventory.getCarried()));
+                                }
+                                if (action.modifiesClicked()) {
+                                    this.player.playerConnection.sendPacket(new Packet103SetSlot(this.player.activeContainer.windowId, packet102windowclick.slot, this.player.activeContainer.getSlot(packet102windowclick.slot).getItem()));
+                                }
+                            }*/
+                            switch (action) {
+                                // Modified other slots
+                                case PICKUP_ALL:
+                                case MOVE_TO_OTHER_INVENTORY:
+                                case HOTBAR_MOVE_AND_READD:
+                                case HOTBAR_SWAP:
+                                case COLLECT_TO_CURSOR:
+                                case UNKNOWN:
+                                    this.field_147369_b.func_71120_a(this.field_147369_b.field_71070_bA);
+                                    break;
+                                // Modified cursor and clicked
+                                case PICKUP_SOME:
+                                case PICKUP_HALF:
+                                case PICKUP_ONE:
+                                case PLACE_ALL:
+                                case PLACE_SOME:
+                                case PLACE_ONE:
+                                case SWAP_WITH_CURSOR:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, this.field_147369_b.field_71071_by.func_70445_o()));
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71070_bA.field_75152_c, p_147351_1_.func_149544_d(), this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d()).func_75211_c()));
+                                    break;
+                                // Modified clicked only
+                                case DROP_ALL_SLOT:
+                                case DROP_ONE_SLOT:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71070_bA.field_75152_c, p_147351_1_.func_149544_d(), this.field_147369_b.field_71070_bA.func_75139_a(p_147351_1_.func_149544_d()).func_75211_c()));
+                                    break;
+                                // Modified cursor only
+                                case DROP_ALL_CURSOR:
+                                case DROP_ONE_CURSOR:
+                                case CLONE_STACK:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, this.field_147369_b.field_71071_by.func_70445_o()));
+                                    break;
+                                // Nothing
+                                case NOTHING:
+                                    break;
+                            }
+                            return;
+                    }
+
+                    if (event instanceof CraftItemEvent) {
+                        // Need to update the inventory on crafting to
+                        // correctly support custom recipes
+                        field_147369_b.func_71120_a(field_147369_b.field_71070_bA);
+                    }
+                }
+                // CraftBukkit end
+
+                if (ItemStack.areItemStacksEqualUsingNBTShareTag(p_147351_1_.func_149546_g(), itemstack))
                 {
                     this.field_147369_b.field_71135_a.func_147359_a(new SPacketConfirmTransaction(p_147351_1_.func_149548_c(), p_147351_1_.func_149547_f(), true));
                     this.field_147369_b.field_71137_h = true;
@@ -1278,15 +2311,15 @@
                 }
                 else
                 {
-                    this.field_147372_n.func_76038_a(this.field_147369_b.field_71070_bA.field_75152_c, p_147351_1_.func_149547_f());
+                    this.field_147372_n.func_76038_a(this.field_147369_b.field_71070_bA.field_75152_c, Short.valueOf(p_147351_1_.func_149547_f()));
                     this.field_147369_b.field_71135_a.func_147359_a(new SPacketConfirmTransaction(p_147351_1_.func_149548_c(), p_147351_1_.func_149547_f(), false));
                     this.field_147369_b.field_71070_bA.func_75128_a(this.field_147369_b, false);
-                    NonNullList<ItemStack> nonnulllist1 = NonNullList.func_191196_a();
+                    NonNullList<ItemStack> nonnulllist1 = NonNullList.<ItemStack>func_191196_a();
 
                     for (int j = 0; j < this.field_147369_b.field_71070_bA.field_75151_b.size(); ++j)
                     {
-                        ItemStack itemstack = this.field_147369_b.field_71070_bA.field_75151_b.get(j).func_75211_c();
-                        ItemStack itemstack1 = itemstack.func_190926_b() ? ItemStack.field_190927_a : itemstack;
+                        ItemStack itemstack2 = ((Slot)this.field_147369_b.field_71070_bA.field_75151_b.get(j)).func_75211_c();
+                        ItemStack itemstack1 = itemstack2.func_190926_b() ? ItemStack.field_190927_a : itemstack2;
                         nonnulllist1.add(itemstack1);
                     }
 
@@ -1296,39 +2329,46 @@
         }
     }
 
-    @Override
     public void func_194308_a(CPacketPlaceRecipe p_194308_1_)
     {
         PacketThreadUtil.func_180031_a(p_194308_1_, this, this.field_147369_b.func_71121_q());
         this.field_147369_b.func_143004_u();
 
-        if (!this.field_147369_b.func_175149_v()
-                && this.field_147369_b.field_71070_bA.field_75152_c == p_194308_1_.func_194318_a()
-                && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b))
+        // CatServer start
+        if (catserver.server.CatServer.getConfig().craftRequestThrottle > 0 && craftRequestThrottle++ > catserver.server.CatServer.getConfig().craftRequestThrottle) {
+            this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+            return;
+        }
+        // CatServer end
+
+        if (!this.field_147369_b.func_175149_v() && this.field_147369_b.field_71070_bA.field_75152_c == p_194308_1_.func_194318_a() && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b))
         {
             this.field_194309_H.func_194327_a(this.field_147369_b, p_194308_1_.func_194317_b(), p_194308_1_.func_194319_c());
         }
     }
 
-    @Override
     public void func_147338_a(CPacketEnchantItem p_147338_1_)
     {
         PacketThreadUtil.func_180031_a(p_147338_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         this.field_147369_b.func_143004_u();
 
-        if (this.field_147369_b.field_71070_bA.field_75152_c == p_147338_1_.func_149539_c()
-                && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b)
-                && !this.field_147369_b.func_175149_v())
+        if (this.field_147369_b.field_71070_bA.field_75152_c == p_147338_1_.func_149539_c() && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b) && !this.field_147369_b.func_175149_v())
         {
             this.field_147369_b.field_71070_bA.func_75140_a(this.field_147369_b, p_147338_1_.func_149537_d());
             this.field_147369_b.field_71070_bA.func_75142_b();
         }
     }
 
-    @Override
     public void func_147344_a(CPacketCreativeInventoryAction p_147344_1_)
     {
         PacketThreadUtil.func_180031_a(p_147344_1_, this, this.field_147369_b.func_71121_q());
+        // CatServer start
+        if (catserver.server.CatServer.getConfig().itemNBTThrottle > 0 && p_147344_1_.func_149625_d().func_77942_o() && this.readItemBookThrottle++ > catserver.server.CatServer.getConfig().itemNBTThrottle) {
+            this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+            return;
+        }
+        // CatServer end
 
         if (this.field_147369_b.field_71134_c.func_73083_d())
         {
@@ -1356,7 +2396,46 @@
             }
 
             boolean flag1 = p_147344_1_.func_149627_c() >= 1 && p_147344_1_.func_149627_c() <= 45;
-            boolean flag2 = itemstack.func_190926_b() || itemstack.func_77960_j() >= 0 && itemstack.func_190916_E() <= 64 && !itemstack.func_190926_b();
+            // boolean flag2 = itemstack.isEmpty() || itemstack.getMetadata() >= 0 && itemstack.getCount() <= 64 && !itemstack.isEmpty();
+            // CraftBukkit - Add invalidItems check
+            boolean flag2 = (itemstack.func_190926_b() || itemstack.func_77960_j() >= 0 && itemstack.func_190916_E() <= 64 && !itemstack.func_190926_b() && !invalidItems.contains(Item.func_150891_b(itemstack.func_77973_b())) || !org.spigotmc.SpigotConfig.filterCreativeItems); // Spigot
+            if (flag || (flag1 && !ItemStack.func_77989_b(this.field_147369_b.field_71069_bz.func_75139_a(p_147344_1_.func_149627_c()).func_75211_c(), p_147344_1_.func_149625_d()))) { // Insist on valid slot
+                // CraftBukkit start - Call click event
+                InventoryView inventory = this.field_147369_b.field_71069_bz.getBukkitView();
+                org.bukkit.inventory.ItemStack item = CraftItemStack.asBukkitCopy(p_147344_1_.func_149625_d());
+
+                InventoryType.SlotType type = InventoryType.SlotType.QUICKBAR;
+                if (flag) {
+                    type = InventoryType.SlotType.OUTSIDE;
+                } else if (p_147344_1_.func_149627_c() < 36) {
+                    if (p_147344_1_.func_149627_c() >= 5 && p_147344_1_.func_149627_c() < 9) {
+                        type = InventoryType.SlotType.ARMOR;
+                    } else {
+                        type = InventoryType.SlotType.CONTAINER;
+                    }
+                }
+                InventoryCreativeEvent event = new InventoryCreativeEvent(inventory, type, flag ? -999 : p_147344_1_.func_149627_c(), item);
+                craftServer.getPluginManager().callEvent(event);
+
+                itemstack = CraftItemStack.asNMSCopy(event.getCursor());
+
+                switch (event.getResult()) {
+                    case ALLOW:
+                        // Plugin cleared the id / stacksize checks
+                        flag2 = true;
+                        break;
+                    case DEFAULT:
+                        break;
+                    case DENY:
+                        // Reset the slot
+                        if (p_147344_1_.func_149627_c() >= 0) {
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71069_bz.field_75152_c, p_147344_1_.func_149627_c(), this.field_147369_b.field_71069_bz.func_75139_a(p_147344_1_.func_149627_c()).func_75211_c()));
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, ItemStack.field_190927_a));
+                        }
+                        return;
+                }
+            }
+            // CraftBukkit end
 
             if (flag1 && flag2)
             {
@@ -1384,26 +2463,22 @@
         }
     }
 
-    @Override
     public void func_147339_a(CPacketConfirmTransaction p_147339_1_)
     {
         PacketThreadUtil.func_180031_a(p_147339_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         Short oshort = this.field_147372_n.func_76041_a(this.field_147369_b.field_71070_bA.field_75152_c);
 
-        if (oshort != null
-                && p_147339_1_.func_149533_d() == oshort
-                && this.field_147369_b.field_71070_bA.field_75152_c == p_147339_1_.func_149532_c()
-                && !this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b)
-                && !this.field_147369_b.func_175149_v())
+        if (oshort != null && p_147339_1_.func_149533_d() == oshort.shortValue() && this.field_147369_b.field_71070_bA.field_75152_c == p_147339_1_.func_149532_c() && !this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b) && !this.field_147369_b.func_175149_v())
         {
             this.field_147369_b.field_71070_bA.func_75128_a(this.field_147369_b, true);
         }
     }
 
-    @Override
     public void func_147343_a(CPacketUpdateSign p_147343_1_)
     {
         PacketThreadUtil.func_180031_a(p_147343_1_, this, this.field_147369_b.func_71121_q());
+        if (this.field_147369_b.func_70610_aX()) return;
         this.field_147369_b.func_143004_u();
         WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
         BlockPos blockpos = p_147343_1_.func_179722_a();
@@ -1423,14 +2498,30 @@
             if (!tileentitysign.func_145914_a() || tileentitysign.func_145911_b() != this.field_147369_b)
             {
                 this.field_147367_d.func_71236_h("Player " + this.field_147369_b.func_70005_c_() + " just tried to change non-editable sign");
+                this.func_147359_a(tileentity.func_189518_D_());
                 return;
             }
 
             String[] astring = p_147343_1_.func_187017_b();
 
+            Player player = this.craftServer.getPlayer(this.field_147369_b);
+            int x = p_147343_1_.func_179722_a().func_177958_n();
+            int y = p_147343_1_.func_179722_a().func_177956_o();
+            int z = p_147343_1_.func_179722_a().func_177952_p();
+            String[] lines = new String[4];
+
             for (int i = 0; i < astring.length; ++i)
             {
-                tileentitysign.field_145915_a[i] = new TextComponentString(TextFormatting.func_110646_a(astring[i]));
+                // tileentitysign.signText[i] = new TextComponentString(TextFormatting.getTextWithoutFormattingCodes(astring[i]));
+                lines[i] = TextFormatting.func_110646_a(new TextComponentString(TextFormatting.func_110646_a(astring[i])).func_150260_c());
+            }
+
+            SignChangeEvent event = new SignChangeEvent((org.bukkit.craftbukkit.v1_12_R1.block.CraftBlock) player.getWorld().getBlockAt(x, y, z), this.craftServer.getPlayer(this.field_147369_b), lines);
+            this.craftServer.getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                System.arraycopy(org.bukkit.craftbukkit.v1_12_R1.block.CraftSign.sanitizeLines(event.getLines()), 0, tileentitysign.field_145915_a, 0, 4);
+                tileentitysign.field_145916_j = false;
             }
 
             tileentitysign.func_70296_d();
@@ -1438,9 +2529,9 @@
         }
     }
 
-    @Override
     public void func_147353_a(CPacketKeepAlive p_147353_1_)
     {
+        // PacketThreadUtil.checkThreadAndEnqueue(packetIn, this, this.player.getServerWorld()); // CatServer - Async handle keepalive
         if (this.field_194403_g && p_147353_1_.func_149460_c() == this.field_194404_h)
         {
             int i = (int)(this.func_147363_d() - this.field_194402_f);
@@ -1449,7 +2540,7 @@
         }
         else if (!this.field_147369_b.func_70005_c_().equals(this.field_147367_d.func_71214_G()))
         {
-            this.func_194028_b(new TextComponentTranslation("disconnect.timeout"));
+            field_147367_d.func_152344_a(() -> this.func_194028_b(new TextComponentTranslation("disconnect.timeout", new Object[0]))); // CatServer - Need to kick player on main thread
         }
     }
 
@@ -1458,36 +2549,44 @@
         return System.nanoTime() / 1000000L;
     }
 
-    @Override
     public void func_147348_a(CPacketPlayerAbilities p_147348_1_)
     {
         PacketThreadUtil.func_180031_a(p_147348_1_, this, this.field_147369_b.func_71121_q());
-        this.field_147369_b.field_71075_bZ.field_75100_b = p_147348_1_.func_149488_d() && this.field_147369_b.field_71075_bZ.field_75101_c;
+        // this.player.capabilities.isFlying = packetIn.isFlying() && this.player.capabilities.allowFlying;
+        if (this.field_147369_b.field_71075_bZ.field_75101_c && this.field_147369_b.field_71075_bZ.field_75100_b != p_147348_1_.func_149488_d()) {
+            PlayerToggleFlightEvent event = new PlayerToggleFlightEvent(this.craftServer.getPlayer(this.field_147369_b), p_147348_1_.func_149488_d());
+            this.craftServer.getPluginManager().callEvent(event);
+            if (!event.isCancelled()) {
+                this.field_147369_b.field_71075_bZ.field_75100_b = p_147348_1_.func_149488_d(); // Actually set the player's flying status
+            } else {
+                this.field_147369_b.func_71016_p(); // Tell the player their ability was reverted
+            }
+        }
     }
 
-    @Override
     public void func_147341_a(CPacketTabComplete p_147341_1_)
     {
         PacketThreadUtil.func_180031_a(p_147341_1_, this, this.field_147369_b.func_71121_q());
-        List<String> list = Lists.newArrayList();
+        if (chatSpamField.addAndGet(this, 10) > 500 && !this.field_147367_d.func_184103_al().func_152596_g(this.field_147369_b.func_146103_bH())) {
+            this.func_194028_b(new TextComponentTranslation("disconnect.spam", new Object[0]));
+            return;
+        }
+        List<String> list = Lists.<String>newArrayList();
 
-        for (String s : this.field_147367_d
-                .func_184104_a(this.field_147369_b, p_147341_1_.func_149419_c(), p_147341_1_.func_179709_b(), p_147341_1_.func_186989_c()))
+        for (String s : this.field_147367_d.func_184104_a(this.field_147369_b, p_147341_1_.func_149419_c(), p_147341_1_.func_179709_b(), p_147341_1_.func_186989_c()))
         {
             list.add(s);
         }
 
-        this.field_147369_b.field_71135_a.func_147359_a(new SPacketTabComplete(list.toArray(new String[list.size()])));
+        this.field_147369_b.field_71135_a.func_147359_a(new SPacketTabComplete((String[])list.toArray(new String[list.size()])));
     }
 
-    @Override
     public void func_147352_a(CPacketClientSettings p_147352_1_)
     {
         PacketThreadUtil.func_180031_a(p_147352_1_, this, this.field_147369_b.func_71121_q());
         this.field_147369_b.func_147100_a(p_147352_1_);
     }
 
-    @Override
     public void func_147349_a(CPacketCustomPayload p_147349_1_)
     {
         PacketThreadUtil.func_180031_a(p_147349_1_, this, this.field_147369_b.func_71121_q());
@@ -1495,6 +2594,11 @@
 
         if ("MC|BEdit".equals(s))
         {
+            if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
+                this.disconnect("Book edited too quickly!");
+                return;
+            }
+            this.lastBookTick = MinecraftServer.currentTick;
             PacketBuffer packetbuffer = p_147349_1_.func_180760_b();
 
             try
@@ -1521,15 +2625,22 @@
                 if (itemstack.func_77973_b() == Items.field_151099_bA && itemstack.func_77973_b() == itemstack1.func_77973_b())
                 {
                     itemstack1.func_77983_a("pages", itemstack.func_77978_p().func_150295_c("pages", 8));
+                    CraftEventFactory.handleEditBookEvent(field_147369_b, itemstack1);
                 }
             }
             catch (Exception exception6)
             {
                 field_147370_c.error("Couldn't handle book info", (Throwable)exception6);
+                this.disconnect("Invalid book data!");
             }
         }
         else if ("MC|BSign".equals(s))
         {
+            if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
+                this.disconnect("Book edited too quickly!");
+                return;
+            }
+            this.lastBookTick = MinecraftServer.currentTick;
             PacketBuffer packetbuffer1 = p_147349_1_.func_180760_b();
 
             try
@@ -1569,12 +2680,14 @@
                     }
 
                     itemstack2.func_77983_a("pages", nbttaglist);
-                    this.field_147369_b.func_184201_a(EntityEquipmentSlot.MAINHAND, itemstack2);
+                    // this.player.setItemStackToSlot(EntityEquipmentSlot.MAINHAND, itemstack2);
+                    CraftEventFactory.handleEditBookEvent(field_147369_b, itemstack2);
                 }
             }
             catch (Exception exception7)
             {
                 field_147370_c.error("Couldn't sign book", (Throwable)exception7);
+                this.disconnect("Invalid book data!");
             }
         }
         else if ("MC|TrSel".equals(s))
@@ -1592,19 +2705,20 @@
             catch (Exception exception5)
             {
                 field_147370_c.error("Couldn't select trade", (Throwable)exception5);
+                this.disconnect("Invalid trade data!");
             }
         }
         else if ("MC|AdvCmd".equals(s))
         {
             if (!this.field_147367_d.func_82356_Z())
             {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled"));
+                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled", new Object[0]));
                 return;
             }
 
             if (!this.field_147369_b.func_189808_dh())
             {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed"));
+                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed", new Object[0]));
                 return;
             }
 
@@ -1617,9 +2731,7 @@
 
                 if (l == 0)
                 {
-                    TileEntity tileentity = this.field_147369_b
-                                            .field_70170_p
-                                            .func_175625_s(new BlockPos(packetbuffer2.readInt(), packetbuffer2.readInt(), packetbuffer2.readInt()));
+                    TileEntity tileentity = this.field_147369_b.field_70170_p.func_175625_s(new BlockPos(packetbuffer2.readInt(), packetbuffer2.readInt(), packetbuffer2.readInt()));
 
                     if (tileentity instanceof TileEntityCommandBlock)
                     {
@@ -1646,29 +2758,30 @@
 
                     if (!flag2)
                     {
-                        commandblockbaselogic1.func_145750_b(null);
+                        commandblockbaselogic1.func_145750_b((ITextComponent)null);
                     }
 
                     commandblockbaselogic1.func_145756_e();
-                    this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", s6));
+                    this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", new Object[] {s6}));
                 }
             }
             catch (Exception exception4)
             {
                 field_147370_c.error("Couldn't set command block", (Throwable)exception4);
+                this.disconnect("Invalid command data!");
             }
         }
         else if ("MC|AutoCmd".equals(s))
         {
             if (!this.field_147367_d.func_82356_Z())
             {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled"));
+                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled", new Object[0]));
                 return;
             }
 
             if (!this.field_147369_b.func_189808_dh())
             {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed"));
+                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed", new Object[0]));
                 return;
             }
 
@@ -1695,39 +2808,21 @@
 
                 if (commandblockbaselogic != null)
                 {
-                    EnumFacing enumfacing = this.field_147369_b.field_70170_p.func_180495_p(blockpos1).func_177229_b(BlockCommandBlock.field_185564_a);
+                    EnumFacing enumfacing = (EnumFacing)this.field_147369_b.field_70170_p.func_180495_p(blockpos1).func_177229_b(BlockCommandBlock.field_185564_a);
 
                     switch (tileentitycommandblock$mode)
                     {
                         case SEQUENCE:
                             IBlockState iblockstate3 = Blocks.field_185777_dd.func_176223_P();
-                            this.field_147369_b
-                            .field_70170_p
-                            .func_180501_a(
-                                blockpos1,
-                                iblockstate3.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, flag),
-                                2
-                            );
+                            this.field_147369_b.field_70170_p.func_180501_a(blockpos1, iblockstate3.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag)), 2);
                             break;
                         case AUTO:
                             IBlockState iblockstate2 = Blocks.field_185776_dc.func_176223_P();
-                            this.field_147369_b
-                            .field_70170_p
-                            .func_180501_a(
-                                blockpos1,
-                                iblockstate2.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, flag),
-                                2
-                            );
+                            this.field_147369_b.field_70170_p.func_180501_a(blockpos1, iblockstate2.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag)), 2);
                             break;
                         case REDSTONE:
                             IBlockState iblockstate = Blocks.field_150483_bI.func_176223_P();
-                            this.field_147369_b
-                            .field_70170_p
-                            .func_180501_a(
-                                blockpos1,
-                                iblockstate.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, flag),
-                                2
-                            );
+                            this.field_147369_b.field_70170_p.func_180501_a(blockpos1, iblockstate.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag)), 2);
                     }
 
                     tileentity2.func_145829_t();
@@ -1737,7 +2832,7 @@
 
                     if (!flag3)
                     {
-                        commandblockbaselogic.func_145750_b(null);
+                        commandblockbaselogic.func_145750_b((ITextComponent)null);
                     }
 
                     tileentitycommandblock.func_184253_b(flag1);
@@ -1745,13 +2840,14 @@
 
                     if (!net.minecraft.util.StringUtils.func_151246_b(s7))
                     {
-                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", s7));
+                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", new Object[] {s7}));
                     }
                 }
             }
             catch (Exception exception3)
             {
                 field_147370_c.error("Couldn't set command block", (Throwable)exception3);
+                this.disconnect("Invalid command data!");
             }
         }
         else if ("MC|Beacon".equals(s))
@@ -1778,6 +2874,7 @@
                 catch (Exception exception2)
                 {
                     field_147370_c.error("Couldn't set beacon", (Throwable)exception2);
+                    this.disconnect("Invalid beacon data!");
                 }
             }
         }
@@ -1848,37 +2945,37 @@
                     {
                         if (tileentitystructure.func_184419_m())
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.save_success", s4), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.save_success", new Object[] {s4}), false);
                         }
                         else
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.save_failure", s4), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.save_failure", new Object[] {s4}), false);
                         }
                     }
                     else if (l1 == 3)
                     {
                         if (!tileentitystructure.func_189709_F())
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_not_found", s4), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_not_found", new Object[] {s4}), false);
                         }
                         else if (tileentitystructure.func_184412_n())
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_success", s4), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_success", new Object[] {s4}), false);
                         }
                         else
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_prepare", s4), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_prepare", new Object[] {s4}), false);
                         }
                     }
                     else if (l1 == 4)
                     {
                         if (tileentitystructure.func_184417_l())
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.size_success", s4), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.size_success", new Object[] {s4}), false);
                         }
                         else
                         {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.size_failure"), false);
+                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.size_failure", new Object[0]), false);
                         }
                     }
 
@@ -1889,6 +2986,7 @@
             catch (Exception exception1)
             {
                 field_147370_c.error("Couldn't set structure block", (Throwable)exception1);
+                this.disconnect("Invalid structure data!");
             }
         }
         else if ("MC|PickItem".equals(s))
@@ -1899,22 +2997,50 @@
             {
                 int j1 = packetbuffer6.func_150792_a();
                 this.field_147369_b.field_71071_by.func_184430_d(j1);
-                this.field_147369_b
-                .field_71135_a
-                .func_147359_a(
-                    new SPacketSetSlot(
-                        -2,
-                        this.field_147369_b.field_71071_by.field_70461_c,
-                        this.field_147369_b.field_71071_by.func_70301_a(this.field_147369_b.field_71071_by.field_70461_c)
-                    )
-                );
+                this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-2, this.field_147369_b.field_71071_by.field_70461_c, this.field_147369_b.field_71071_by.func_70301_a(this.field_147369_b.field_71071_by.field_70461_c)));
                 this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-2, j1, this.field_147369_b.field_71071_by.func_70301_a(j1)));
                 this.field_147369_b.field_71135_a.func_147359_a(new SPacketHeldItemChange(this.field_147369_b.field_71071_by.field_70461_c));
             }
             catch (Exception exception)
             {
                 field_147370_c.error("Couldn't pick item", (Throwable)exception);
-            }
-        }
+                this.disconnect("Invalid pick item!");
+            }
+        }
+        // CraftBukkit start
+        else if (p_147349_1_.func_149559_c().equals("REGISTER")) {
+            try {
+                String channels = p_147349_1_.func_180760_b().toString(com.google.common.base.Charsets.UTF_8);
+                for (String channel : channels.split("\0")) {
+                    getPlayer().addChannel(channel);
+                }
+            } catch (Exception ex) {
+                NetHandlerPlayServer.field_147370_c.error("Couldn\'t register custom payload", ex);
+                this.disconnect("Invalid payload REGISTER!");
+            }
+        } else if (p_147349_1_.func_149559_c().equals("UNREGISTER")) {
+            try {
+                String channels = p_147349_1_.func_180760_b().toString(com.google.common.base.Charsets.UTF_8);
+                for (String channel : channels.split("\0")) {
+                    getPlayer().removeChannel(channel);
+                }
+            } catch (Exception ex) {
+                NetHandlerPlayServer.field_147370_c.error("Couldn\'t unregister custom payload", ex);
+                this.disconnect("Invalid payload UNREGISTER!");
+            }
+        } else {
+            try {
+                byte[] data = new byte[p_147349_1_.func_180760_b().readableBytes()];
+                p_147349_1_.func_180760_b().readBytes(data);
+                craftServer.getMessenger().dispatchIncomingMessage(field_147369_b.getBukkitEntity(), p_147349_1_.func_149559_c(), data);
+            } catch (Exception ex) {
+                NetHandlerPlayServer.field_147370_c.error("Couldn\'t dispatch custom payload", ex);
+                this.disconnect("Invalid custom payload!");
+            }
+        }
+    }
+
+    public final boolean isDisconnected() {
+        return !this.field_147369_b.joining && !this.field_147371_a.func_150724_d();
     }
 }
